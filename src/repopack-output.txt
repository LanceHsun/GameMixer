This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2025-01-02T19:45:57.536Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
components/
  common/
    GradientButton/
      index.js
  layout/
    Footer/
      index.js
    FullpageScroll/
      index.js
    Header/
      index.jsx
    MainLayout/
      index.js
  sections/
    Home/
      CallToAction/
        index.js
      DonationOptions/
        index.js
      EventCarousel/
        index.js
      Hero/
        index.js
      ImpactMetrics/
        index.js
      MissionSection/
        index.js
      SponsorsSection/
        index.js
config/
  paths.js
context/
  DonationContext.js
pages/
  Home/
    index.jsx
styles/
  globals.css
App.js
App.test.js
index.js
reportWebVitals.js
setupTests.js

================================================================
Repository Files
================================================================

================
File: components/common/GradientButton/index.js
================
import React from 'react';

const GradientButton = ({
  children,
  onClick,
  size = 'medium',
  className = '',
  type = 'button',
  disabled = false
}) => {
  const sizeClasses = {
    small: 'px-4 py-2 text-sm',
    medium: 'px-8 py-3 text-lg',
    large: 'px-10 py-4 text-xl'
  };

  return (
    <button
      type={type}
      onClick={onClick}
      disabled={disabled}
      className={`
        ${sizeClasses[size]}
        rounded-xl
        font-bold
        tracking-wider
        text-white
        bg-gradient-to-r 
        from-indigo-400/70 
        to-blue-400/70
        backdrop-blur-md
        border-2
        border-white/40
        shadow-lg
        transition-all
        duration-300
        hover:shadow-xl
        hover:scale-105
        hover:from-indigo-300/80 
        hover:to-blue-300/80
        active:scale-95
        disabled:opacity-50
        disabled:hover:scale-100
        disabled:hover:shadow-none
        group
        relative
        overflow-hidden
        ${className}
      `}
    >
      <span className="relative z-10 font-bold tracking-wider uppercase drop-shadow-lg">
        {children}
      </span>
      <div className="
        absolute 
        inset-0 
        bg-gradient-to-r 
        from-purple-400/40 
        to-pink-400/40 
        opacity-0 
        group-hover:opacity-100 
        transition-opacity 
        duration-300
      "></div>
    </button>
  );
};

// 添加 PropTypes （可选，但推荐）
GradientButton.defaultProps = {
  size: 'medium',
  className: '',
  type: 'button',
  disabled: false
};

// 导出组件
export default GradientButton;

================
File: components/layout/Footer/index.js
================
import React from 'react';

const Footer = () => {
  const socialLinks = [
    {
      icon: (
        <svg role="img" viewBox="0 0 24 24" className="w-6 h-6 fill-current">
          <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
        </svg>
      ),
      href: 'https://facebook.com',
      label: 'Facebook'
    },
    {
      icon: (
        <svg role="img" viewBox="0 0 24 24" className="w-6 h-6 fill-current">
          <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/>
        </svg>
      ),
      href: 'https://instagram.com',
      label: 'Instagram'
    },
    {
      icon: (
        <svg role="img" viewBox="0 0 24 24" className="w-6 h-6 fill-current">
          <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
        </svg>
      ),
      href: 'https://youtube.com',
      label: 'YouTube'
    },
    {
      icon: (
        <img 
        src={process.env.PUBLIC_URL + "/images/social-media-logo/XiaohongshuLOGO.png"} 
          alt="Xiaohongshu" 
          className="w-6 h-6 object-contain"
        />
      ),
      href: 'https://xiaohongshu.com',
      label: 'Xiaohongshu'
    }
  ];

  return (
    <footer className="bg-white border-t border-gray-200">
      {/* Social Media Links */}
      <div className="max-w-screen-lg mx-auto px-4 py-6 border-b border-gray-200">
        <div className="flex justify-center space-x-6">
          {socialLinks.map((link, index) => (
            <a
              key={index}
              href={link.href}
              className="w-10 h-10 flex items-center justify-center rounded-full hover:bg-blue-50 text-gray-600 hover:text-gray-900 transition-colors"
              aria-label={link.label}
              target="_blank"
              rel="noopener noreferrer"
            >
              {link.icon}
            </a>
          ))}
        </div>
      </div>

      {/* Main Footer Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          <div>
            <h3 className="text-sm font-semibold text-gray-400 uppercase">take action</h3>
            <div className="mt-2">
              <a href="/donate" className="text-gray-500 hover:text-gray-600">
                give today
              </a>
            </div>
          </div>
          <div>
            <h3 className="text-sm font-semibold text-gray-400 uppercase">Get Involved</h3>
            <div className="mt-2 space-y-2">
              <a href="/events" className="block text-gray-500 hover:text-gray-600">
                Board Game Social
              </a>
              <a href="/events" className="block text-gray-500 hover:text-gray-600">
                Game Mixer's Ultimate Summer Bash
              </a>
            </div>
          </div>
          <div>
            <h3 className="text-sm font-semibold text-gray-400 uppercase">get to know us</h3>
            <div className="mt-2">
              <a href="/about" className="text-gray-500 hover:text-gray-600">
                meet the team
              </a>
            </div>
          </div>
          <div>
            <h3 className="text-sm font-semibold text-gray-400 uppercase">connect</h3>
            <div className="mt-2">
              <a href="/contact" className="text-gray-500 hover:text-gray-600">
                connect us
              </a>
            </div>
          </div>
        </div>
        <div className="mt-8 pt-8 border-t border-gray-200 text-center text-gray-400">
          ©2024 by Game Mixer A Nonprofit Organization
        </div>
      </div>
    </footer>
  );
};

export default Footer;

================
File: components/layout/FullpageScroll/index.js
================
import React, { useEffect, useRef, useState } from 'react';

const FullpageScroll = ({ children }) => {
  const containerRef = useRef(null);
  const sectionsRef = useRef([]);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const sections = React.Children.toArray(children);

  useEffect(() => {
    const handleScroll = (e) => {
      if (isTransitioning) {
        return;
      }

      const container = containerRef.current;
      const sectionElements = sectionsRef.current;
      
      // 获取当前视口中最接近中心的section
      const viewportMiddle = window.scrollY + window.innerHeight / 2;
      const currentSectionIndex = sectionElements.findIndex((section, index) => {
        const rect = section.getBoundingClientRect();
        const sectionTop = window.scrollY + rect.top;
        const sectionBottom = sectionTop + rect.height;
        return viewportMiddle >= sectionTop && viewportMiddle < sectionBottom;
      });

      if (currentSectionIndex === -1) return;

      const currentSection = sectionElements[currentSectionIndex];
      const rect = currentSection.getBoundingClientRect();
      
      // 检查是否在section的边界
      const isAtTop = rect.top >= 0 && rect.top <= 5;
      const isAtBottom = rect.bottom >= window.innerHeight - 5 && rect.bottom <= window.innerHeight;
      
      if (isAtTop || isAtBottom) {
        const nextIndex = isAtTop ? 
          Math.max(0, currentSectionIndex - 1) : 
          Math.min(sections.length - 1, currentSectionIndex + 1);

        if (nextIndex !== currentSectionIndex) {
          setIsTransitioning(true);
          const nextSection = sectionElements[nextIndex];
          nextSection.scrollIntoView({ behavior: 'smooth' });
          
          setTimeout(() => {
            setIsTransitioning(false);
          }, 1000);
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [sections.length, isTransitioning]);

  // 初始化section引用
  useEffect(() => {
    sectionsRef.current = Array.from(
      containerRef.current.getElementsByClassName('fullpage-section')
    );
  }, []);

  return (
    <div ref={containerRef} className="w-full">
      {sections.map((section, index) => (
        <div 
          key={index}
          className="fullpage-section min-h-screen w-full"
        >
          {section}
        </div>
      ))}
    </div>
  );
};

export default FullpageScroll;

================
File: components/layout/Header/index.jsx
================
import React, { useState } from 'react';
import { Menu, X } from 'lucide-react';
import { paths } from '../../../config/paths';
const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [hoveredItem, setHoveredItem] = useState(null);

  const navigation = [
    { 
      name: 'Take Action', 
      subItems: [{ name: 'Give Today', path: '/give' }]
    },
    {
      name: 'Get Involved',
      subItems: [
        { name: 'Board Game Social', path: '/events/board-game-social' },
        { name: "Game Mixer's Ultimate Summer Bash", path: '/events/summer-bash' }
      ]
    },
    { 
      name: 'Get to Know Us', 
      subItems: [{ name: 'Meet the Team', path: '/team' }]
    },
    { 
      name: 'Connect', 
      subItems: [{ name: 'Connect Us', path: '/contact' }]
    },
  ];

  return (
    <header className="sticky top-0 z-50 backdrop-blur-lg">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Left section with logo */}
          <div className="flex items-center">
            <a href="/" className="flex items-center gap-2">
              <img 
                src={process.env.PUBLIC_URL + "/images/Game-mixer-logo.avif"} 
                alt="Game Mixer Logo" 
                className="w-10 h-10 object-contain"
              />
              <span className="logo-text text-white">Game Mixer</span>
            </a>
          </div>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center gap-10 relative">
            {navigation.map((item) => (
              <div 
                key={item.name} 
                className="relative group"
                onMouseEnter={() => setHoveredItem(item.name)}
                onMouseLeave={() => setHoveredItem(null)}
              >
                <button 
                  className="nav-item text-white hover:text-gray-200 transition-colors"
                  onClick={() => {/* 处理点击事件 */}}
                >
                  {item.name}
                </button>
                {hoveredItem === item.name && (
                  <div className="absolute top-full left-0 bg-gradient-to-r from-purple-300 to-indigo-300 backdrop-blur-lg rounded-lg shadow-lg border border-white/20 mt-2 p-4"
                    style={{
                      backgroundColor: 'rgba(200, 170, 255, 0.85)',
                    }}>
                    {item.subItems.map((subItem) => (
                      <div key={subItem.name} className="mb-2 last:mb-0">
                        <a 
                          href={paths.getRoutePath(subItem.path)} 
                          className="nav-item block text-white hover:text-gray-200 transition-colors whitespace-nowrap"
                        >
                          {subItem.name}
                        </a>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            ))}
            <button className="button-text text-sm font-bold px-4 py-0.5 sm:px-6 sm:py-1 rounded-xl bg-gradient-to-r from-indigo-400/70 to-blue-400/70 backdrop-blur-md border-2 border-white/40 shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-105 hover:from-indigo-300/80 hover:to-blue-300/80 active:scale-95 group relative overflow-hidden">
              <span className="relative z-10 text-white drop-shadow-lg">
                GIVE TODAY
              </span>
              <div className="absolute inset-0 bg-gradient-to-r from-purple-400/40 to-pink-400/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </button>
          </nav>

          {/* Mobile menu button */}
          <button
            onClick={() => setIsMenuOpen(!isMenuOpen)}
            className="md:hidden p-2 rounded-lg text-white hover:bg-white/20 transition-colors"
          >
            {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="md:hidden py-4 bg-white/10 backdrop-blur-md rounded-xl border border-white/20 shadow-lg">
            <nav className="flex flex-col gap-4 p-4">
              {navigation.map((item) => (
                <div key={item.name}>
                  <h3 className="nav-secondary text-white mb-2">{item.name}</h3>
                  {item.subItems.map((subItem) => (
                    <a 
                        key={subItem.name}
                        href={paths.getRoutePath(subItem.path)}
                        className="nav-item block text-white hover:text-gray-200 transition-colors px-2 py-2 rounded-lg hover:bg-white/20"
                        onClick={() => setIsMenuOpen(false)}
                      >
                        {subItem.name}
                      </a>
                    ))}
                </div>
              ))}
              <button className="button-text text-sm font-bold mt-2 w-full px-6 py-1.5 rounded-xl bg-gradient-to-r from-indigo-400/70 to-blue-400/70 backdrop-blur-md border-2 border-white/40 shadow-lg transition-all duration-300 hover:shadow-xl hover:scale-105 hover:from-indigo-300/80 hover:to-blue-300/80 active:scale-95 group relative overflow-hidden">
                <span className="relative z-10 text-white drop-shadow-lg">
                  GIVE TODAY
                </span>
                <div className="absolute inset-0 bg-gradient-to-r from-purple-400/40 to-pink-400/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </button>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
}
export default Header;

================
File: components/layout/MainLayout/index.js
================
// src/components/layout/MainLayout/index.jsx
import React from 'react';
import Header from '../Header';
import Footer from '../Footer';

const MainLayout = ({ children }) => {
  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-br from-pink-300 via-purple-300 to-indigo-400">
      <Header />
      <main className="flex-grow">
        {children}
      </main>
      <Footer />
    </div>
  );
};

export default MainLayout;

================
File: components/sections/Home/CallToAction/index.js
================
import React from 'react';
import { useDonation } from '../../../../context/DonationContext';

const CallToAction = () => {
  const { setDonationAmount } = useDonation();

  const handleDonateClick = () => {
    const element = document.getElementById('donation-options');
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
      setDonationAmount(40);
    }
  };

  return (
    <section className="max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      <div className="flex flex-col-reverse md:flex-row items-start gap-8 md:gap-12">
        {/* Content Area */}
        <div className="w-full md:w-1/2 space-y-6 mt-48 md:mt-0 flex flex-col items-center text-center">
          <h2 className="text-4xl md:text-5xl font-bold text-white/90 leading-tight">
            Ready to multiply joy in the Valley?
          </h2>
          
          <p className="text-xl text-white/80">
            Every $40 helps one person find their community. Join us in creating spaces where 
            friendships begin.
          </p>
          
          <button 
            onClick={handleDonateClick}
            className="mt-8 bg-transparent border-2 border-white/60 hover:border-white text-white font-semibold px-8 py-3 rounded-xl transition-all duration-300 transform hover:scale-105"
          >
            GIVE $40
          </button>
        </div>

        {/* Visual Elements */}
        <div className="w-full md:w-1/2">
          <div className="relative w-full h-48 md:h-80">
            <div className="absolute left-4 -top-4 w-2/3 aspect-[4/3] rounded-2xl shadow-md overflow-hidden transform -rotate-6 origin-bottom-left">
              <img 
                src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
                alt="Board game hero"
                className="w-full h-full object-cover"
              />
            </div>
            
            <div className="absolute right-4 top-8 w-2/3 aspect-[4/3] rounded-2xl shadow-md overflow-hidden">
              <img 
                src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
                alt="Board game hero"
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default CallToAction;

================
File: components/sections/Home/DonationOptions/index.js
================
import React, { useState } from 'react';
import { ChevronDown } from 'lucide-react';
import GradientButton from '../../../common/GradientButton';
import { useDonation } from '../../../../context/DonationContext';

const DonationOptions = () => {
  const {
    selectedAmount,
    donationType,
    customAmount,
    setDonationAmount,
    setDonationType,
    setCustomAmount
  } = useDonation();

  const [paymentMethod, setPaymentMethod] = useState('');
  const [cardDetails, setCardDetails] = useState({
    number: '',
    name: '',
    expiry: '',
    cvv: ''
  });

  const donationOptions = [
    { amount: 40, description: 'Supports a participant' },
    { amount: 240, description: 'Event Games support' },
    { amount: 1000, description: 'Large event support' }
  ];

  const handleAmountChange = (e) => {
    const value = e.target.value.replace(/[^0-9]/g, '');
    setCustomAmount(value);
    setDonationAmount(null);  // Clear selected amount when custom amount is entered
  };

  const handleDonationTypeChange = (type) => {
    setDonationType(type);
    if (type === 'goods') {
      setDonationAmount(null);
      setCustomAmount('');
    }
  };

  const renderPaymentFields = () => {
    switch (paymentMethod) {
      case 'credit_card':
        return (
          <div className="space-y-4">
            <div>
              <label className="block text-white mb-2">Card Number</label>
              <input
                type="text"
                maxLength="16"
                placeholder="1234 5678 9012 3456"
                className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
                value={cardDetails.number}
                onChange={(e) => setCardDetails({...cardDetails, number: e.target.value.replace(/\D/g, '')})}
              />
            </div>
            <div>
              <label className="block text-white mb-2">Cardholder Name</label>
              <input
                type="text"
                placeholder="John Doe"
                className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
                value={cardDetails.name}
                onChange={(e) => setCardDetails({...cardDetails, name: e.target.value})}
              />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="block text-white mb-2">Expiry Date</label>
                <input
                  type="text"
                  placeholder="MM/YY"
                  maxLength="5"
                  className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
                  value={cardDetails.expiry}
                  onChange={(e) => setCardDetails({...cardDetails, expiry: e.target.value})}
                />
              </div>
              <div>
                <label className="block text-white mb-2">CVV</label>
                <input
                  type="password"
                  maxLength="4"
                  placeholder="123"
                  className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
                  value={cardDetails.cvv}
                  onChange={(e) => setCardDetails({...cardDetails, cvv: e.target.value.replace(/\D/g, '')})}
                />
              </div>
            </div>
          </div>
        );
      case 'paypal':
        return (
          <div className="text-white text-center p-6">
            <p>You will be redirected to PayPal to complete your donation.</p>
          </div>
        );
      default:
        return null;
    }
  };

  return (
    <section id="donation-options" className="max-w-6xl mx-auto px-4 py-12 md:py-20">
      <div className="max-w-3xl mx-auto space-y-6">
        <h2 className="text-3xl md:text-4xl font-bold text-white/90 text-center mb-8">Support Our Community Your Way</h2>

        {/* Donation Amount Options */}
        <div className="grid grid-cols-3 gap-3 md:gap-4">
          {donationOptions.map((option) => (
            <button
              key={option.amount}
              onClick={() => {
                setDonationAmount(option.amount);
                setDonationType('financial');
              }}
              className={`p-3 md:p-4 rounded-xl transition-all duration-300 ${
                selectedAmount === option.amount
                  ? 'bg-white/20 text-white shadow-lg scale-105 border-2 border-white/50'
                  : 'bg-white/10 text-white/80 hover:bg-white/15 border border-white/10'
              }`}
            >
              <div className="text-base md:text-lg font-semibold">${option.amount}</div>
              <div className="text-xs md:text-sm">{option.description}</div>
            </button>
          ))}
        </div>

        {/* Donation Type Buttons */}
        <div className="grid grid-cols-2 gap-4">
          <button
            onClick={() => handleDonationTypeChange('financial')}
            className={`p-4 rounded-xl transition-all duration-300 ${
              donationType === 'financial'
                ? 'bg-white/20 text-white shadow-lg scale-105 border-2 border-white/50'
                : 'bg-white/10 text-white/80 hover:bg-white/15 border border-white/10'
            }`}
          >
            Donate Now
          </button>
          <button
            onClick={() => handleDonationTypeChange('goods')}
            className={`p-4 rounded-xl transition-all duration-300 ${
              donationType === 'goods'
                ? 'bg-white/20 text-white shadow-lg scale-105 border-2 border-white/50'
                : 'bg-white/10 text-white/80 hover:bg-white/15 border border-white/10'
            }`}
          >
            Offer Goods
          </button>
        </div>

        {/* Dynamic Form Based on Donation Type */}
        {donationType && (  // Only show form if a donation type is selected
          <form className="space-y-6">
            {donationType === 'financial' ? (
            <>
              <div className="space-y-2">
                <label className="block text-white">Donation Amount (USD)</label>
                <div className="relative">
                  <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white">$</span>
                  <input
                    type="text"
                    value={customAmount}
                    onChange={handleAmountChange}
                    placeholder="Enter amount in USD"
                    className="w-full p-4 pl-8 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
                  />
                </div>
              </div>
              <div className="space-y-2">
                <label className="block text-white">Payment Method</label>
                <div className="relative">
                  <select 
                    className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white appearance-none"
                    value={paymentMethod}
                    onChange={(e) => setPaymentMethod(e.target.value)}
                  >
                    <option value="">Select payment method</option>
                    <option value="credit_card">Credit/Debit Card</option>
                    <option value="paypal">PayPal</option>
                  </select>
                  <ChevronDown className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white" />
                </div>
              </div>
              {renderPaymentFields()}
            </>
          ) : (
            <>
              <div className="space-y-2">
                <label className="block text-white">Donation Type</label>
                <div className="relative">
                  <select className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white appearance-none">
                    <option>Select donation type</option>
                    <option>Venue Space</option>
                    <option>Games</option>
                    <option>Gifts</option>
                    <option>Other</option>
                  </select>
                  <ChevronDown className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white" />
                </div>
              </div>
              <div className="space-y-2">
                <label className="block text-white">Donation Details</label>
                <textarea
                  placeholder="Please describe the items or venue you would like to donate.."
                  className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50 min-h-32"
                />
              </div>
            </>
          )}

          <div className="space-y-2">
            <label className="block text-white">Contact Email</label>
            <input
              type="email"
              placeholder="Enter your email address"
              className="w-full p-4 rounded-xl bg-white/10 backdrop-blur-lg text-white placeholder:text-white/50"
            />
          </div>

          <p className="text-sm text-white/70">
            {donationType === 'financial'
              ? 'We will send you a donation receipt and our thanks via email'
              : 'We will contact you via email to discuss further collaboration details'}
          </p>

          <div className="flex justify-end">
            <GradientButton
              type="submit"
              size="small"
              className="w-32"
            >
              Give
            </GradientButton>
          </div>
        </form>
        )}
      </div>
    </section>
  );
};

export default DonationOptions;

================
File: components/sections/Home/EventCarousel/index.js
================
import React, { useState } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { paths } from '../../../../../src/config/paths';

const EventCarousel = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [slideDirection, setSlideDirection] = useState('right');

  const events = [
    {
      title: 'Weekly Board Game Socials',
      description: 'Every Saturday, 80-120 participants connect through curated games that spark laughter, collaboration, and friendships.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/weekly-socials')
  },
    {
      title: 'Monthly Tournament',
      description: 'Join our competitive yet friendly tournament series featuring strategy games and exciting prizes.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/tournaments')
    },
    {
      title: 'Family Game Day',
      description: 'A special monthly event designed for families to bond over board games and create lasting memories.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/family-day')
    }
  ];

  const nextSlide = () => {
    setSlideDirection('right');
    setCurrentSlide((prev) => (prev + 1) % events.length);
  };

  const prevSlide = () => {
    setSlideDirection('left');
    setCurrentSlide((prev) => (prev - 1 + events.length) % events.length);
  };

  const goToSlide = (index) => {
    setSlideDirection(index > currentSlide ? 'right' : 'left');
    setCurrentSlide(index);
  };

  return (
    <section className="max-w-screen-lg mx-auto px-4 py-8 md:py-12">
      <div className="text-center mb-8">
        <h2 className="text-4xl font-bold text-white/90 mb-3">
          When You Give, Communities Thrive
        </h2>
        <p className="text-lg text-white/80">
          See how your donation transforms Saturday nights into life-changing social connections
        </p>
      </div>

      <div className="relative max-w-2xl mx-auto">
        <div 
          key={currentSlide}
          className={`h-[400px] rounded-xl overflow-hidden relative
            ${slideDirection === 'right' ? 'translate-x-full opacity-0' : '-translate-x-full opacity-0'}
            animate-slideIn`}
          style={{
            animation: `slideIn${slideDirection === 'right' ? 'Right' : 'Left'} 0.5s forwards`
          }}
        >
          {/* Background Image with Gradient Overlay */}
          <div className="absolute inset-0">
            <img
              src={events[currentSlide].image}
              alt={events[currentSlide].title}
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-gradient-to-r from-purple-500/80 to-pink-500/80 backdrop-blur-sm" />
          </div>

          {/* Content */}
          <div className="relative h-full flex flex-col justify-between p-8">
            <div className="max-w-xl">
              <h3 className="text-3xl font-bold text-white mb-4">{events[currentSlide].title}</h3>
              <p className="text-lg text-white/90">{events[currentSlide].description}</p>
            </div>
            
            <div className="self-end">
              <a 
                href={events[currentSlide].link}
                className="text-white/90 hover:text-white transition-colors text-lg hover:underline inline-flex items-center gap-2"
              >
                Read more
              </a>
            </div>
          </div>
        </div>

        {/* Navigation Buttons */}
        <button 
          onClick={prevSlide}
          className="absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-black/20 hover:bg-black/40 text-white transition-colors z-10"
          aria-label="Previous slide"
        >
          <ChevronLeft className="w-6 h-6" />
        </button>
        <button 
          onClick={nextSlide}
          className="absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-black/20 hover:bg-black/40 text-white transition-colors z-10"
          aria-label="Next slide"
        >
          <ChevronRight className="w-6 h-6" />
        </button>

        {/* Slide Indicators */}
        <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex justify-center gap-2 z-10">
          {events.map((_, index) => (
            <button
              key={index}
              onClick={() => goToSlide(index)}
              className={`w-2 h-2 rounded-full transition-colors ${
                currentSlide === index ? 'bg-white' : 'bg-white/40'
              }`}
              aria-label={`Go to slide ${index + 1}`}
            />
          ))}
        </div>
      </div>

      <style jsx>{`
        @keyframes slideInRight {
          from {
            transform: translateX(100%);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }

        @keyframes slideInLeft {
          from {
            transform: translateX(-100%);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }
      `}</style>
    </section>
  );
};

export default EventCarousel;

================
File: components/sections/Home/Hero/index.js
================
import React from 'react';
import { Coins, House, Gift, Gamepad2, Calendar, MapPin, Users } from 'lucide-react';

const DonationCard = ({ title, description, icon: Icon }) => {
  const [firstLine, secondLine] = description.split(' & ');
  
  return (
    <div className="bg-white/10 backdrop-blur-lg rounded-xl p-6 h-full transition-all duration-300 hover:bg-white/20">
      <div className="flex items-center gap-3 mb-4">
        <Icon className="w-6 h-6 text-white" />
        <h3 className="text-lg font-semibold text-white">{title}</h3>
      </div>
      <div className="space-y-1">
        <p className="text-white/80 text-sm leading-relaxed">{firstLine}</p>
        <p className="text-white/80 text-sm leading-relaxed">{secondLine}</p>
      </div>
    </div>
  );
};

const EventDetail = ({ label, icon: Icon }) => (
  <div className="flex items-center gap-2">
    <Icon className="w-4 h-4 text-white/80" />
    <span className="text-white/80 text-sm">{label}</span>
  </div>
);

const Hero = () => {
  const donationOptions = [
    {
      title: 'Financial Donation',
      description: 'Funds events & Supports volunteers',
      icon: Coins
    },
    {
      title: 'Venue Support',
      description: 'Spaces for 50-100 attendees & 3-4 hours per event',
      icon: House
    },
    {
      title: 'Prize Support',
      description: 'Winner rewards & Participation gifts',
      icon: Gift
    },
    {
      title: 'Game Library',
      description: 'Board games for all levels & Party games for groups',
      icon: Gamepad2
    }
  ];

  const eventDetails = [
    { label: 'Jan 15, 2025', icon: Calendar },
    { label: 'San Jose', icon: MapPin },
    { label: '80 Expected', icon: Users }
  ];

  return (
    <section className="relative max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      {/* Main container */}
      <div className="flex flex-col lg:flex-row gap-8 lg:gap-12">
        {/* Content Container */}
        <div className="space-y-6 lg:w-1/2">
          {/* Event Details */}
          <div className="flex flex-wrap gap-4">
            {eventDetails.map((detail, index) => (
              <EventDetail key={index} label={detail.label} icon={detail.icon} />
            ))}
          </div>
          {/* Hero Text */}
          <div className="space-y-4">
            <h1 className="text-4xl md:text-5xl font-bold text-white leading-tight tracking-tight">
              Donate for future events
            </h1>
            <p className="text-xl text-white/90 leading-relaxed">
              Every gift creates a moment of connection and belonging for someone new. 
              Act now to help us welcome even more participants.
            </p>
          </div>
          
          {/* Donation Options Grid */}
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            {donationOptions.map((option, index) => (
              <DonationCard
                key={index}
                title={option.title}
                description={option.description}
                icon={option.icon}
              />
            ))}
          </div>
        </div>

        {/* Image Container */}
        <div className="lg:w-1/2 flex items-center">
          <div className="w-full h-full relative rounded-lg overflow-hidden">

            <img 
              src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
              alt="Game Mixer Event"
              className="w-full h-full object-cover rounded-lg aspect-[16/9] md:aspect-[4/3] lg:aspect-[16/10]"
            />
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;

================
File: components/sections/Home/ImpactMetrics/index.js
================
import React from 'react';

const MetricCard = ({ number, label, imageUrl }) => {
  return (
    <div className="relative h-[115.2px] md:h-64 lg:h-[460.8px] group cursor-pointer">
      {/* Background Layer */}
      <div className="absolute inset-0 bg-white/10 backdrop-blur-lg rounded-xl transition-opacity duration-300 group-hover:opacity-0" />
      
      {/* Image Layer (Hidden by default, shown on hover) */}
      <div 
        className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-cover bg-center rounded-xl overflow-hidden"
      >
        <div className="w-full h-full bg-white/10 backdrop-blur-lg flex items-center justify-center">
          {imageUrl && (
            <img 
              src={imageUrl} 
              alt={label} 
              className="w-full h-full object-cover"
            />
          )}
        </div>
      </div>

      {/* Content Layer (Hidden on hover) */}
      <div className="relative h-full flex flex-col items-center justify-center lg:justify-end text-white p-8 group-hover:opacity-0 transition-opacity duration-300">
        <div className="text-5xl md:text-6xl lg:text-7xl font-bold mb-3">{number}</div>
        <div className="text-xl md:text-2xl lg:text-2xl text-center">{label}</div>
      </div>
    </div>
  );
};

const ImpactMetrics = () => {
  const metrics = [
    { 
      number: '600', 
      label: 'EVENTS',
      imageUrl: '/picture/hero.avif'
    },
    { 
      number: '40k', 
      label: 'ATTENDANCES',
      imageUrl: '/picture/hero.avif'
    },
    { 
      number: '8k', 
      label: 'MEMBERS', 
      imageUrl: '/picture/hero.avif'
    },
    { 
      number: '18k', 
      label: 'VOLUNTEER HOURS',
      imageUrl: '/picture/hero.avif'
    }
  ];

  return (
    <section className="max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      <h2 className="text-4xl font-bold text-white/90 text-center mb-12">
        What difference does it make?
      </h2>

      {/* Metrics Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {metrics.map((metric, index) => (
          <MetricCard
            key={index}
            number={metric.number}
            label={metric.label}
            imageUrl={metric.imageUrl}
          />
        ))}
      </div>

      {/* Testimonial */}
      <div className="mt-12 text-center">
        <p className="text-xl text-white/80 italic">
          "Game Mixer isn't just a gaming group—it's a family. I've met lifelong friends here."
        </p>
        <p className="text-white/60 mt-2">
          – A Regular Participant
        </p>
      </div>
    </section>
  );
};

export default ImpactMetrics;

================
File: components/sections/Home/MissionSection/index.js
================
import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const MissionSection = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);

  const images = [
    { id: 1, src: "/picture/hero.avif", alt: "Community game night" },
    { id: 2, src: "/picture/hero.avif", alt: "Board game session" },
    { id: 3, src: "/picture/hero.avif", alt: "Game mixer event" },
  ];

  // Auto-play functionality
  useEffect(() => {
    if (!isAutoPlaying) return;

    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);
    }, 3000);

    return () => clearInterval(interval);
  }, [isAutoPlaying, images.length]);

  const handleNext = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);
  };

  const handlePrev = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prevIndex) => (prevIndex - 1 + images.length) % images.length);
  };

  return (
    <section className="max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      {/* Mission Statement */}
      <div className="text-center space-y-8 max-w-4xl mx-auto mb-16">
        <h2 className="text-lg font-semibold text-white/90 uppercase tracking-wider">
          Support Us
        </h2>
        <p className="text-3xl md:text-4xl text-white/90 font-medium leading-relaxed">
          Game Mixer is Silicon Valley's premier nonprofit dedicated to building vibrant and connected communities through the power of play.
        </p>
      </div>

      <div className="max-w-5xl mx-auto space-y-16">
        {/* Image Carousel - Desktop */}
        <div className="hidden md:grid md:grid-cols-3 gap-6">
          {images.map((image) => (
            <div 
              key={image.id}
              className="bg-white/10 backdrop-blur-lg rounded-xl overflow-hidden relative aspect-square"
            >
              <img
                src={image.src}
                alt={image.alt}
                className="absolute inset-0 w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-black/20" />
            </div>
          ))}
        </div>

        {/* Image Carousel - Mobile */}
        <div className="relative md:hidden">
          <div className="overflow-hidden rounded-xl aspect-square max-w-[80%] mx-auto">
            <div className="relative flex transition-transform duration-300 ease-in-out"
                 style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
              {images.map((image, index) => (
                <div
                  key={image.id}
                  className="min-w-full relative"
                  style={{
                    transform: `scale(${index === currentIndex ? 1 : 0.9})`,
                    transition: 'transform 0.3s ease-in-out',
                    zIndex: index === currentIndex ? 2 : 1,
                  }}
                >
                  <img
                    src={image.src}
                    alt={image.alt}
                    className="w-full h-full object-cover rounded-xl"
                  />
                  <div className="absolute inset-0 bg-black/20 rounded-xl" />
                </div>
              ))}
            </div>
          </div>

          {/* Navigation Buttons */}
          <button
            onClick={handlePrev}
            className="absolute left-[12%] top-1/2 -translate-y-1/2 bg-white/20 backdrop-blur-sm p-2 rounded-full hover:bg-white/30 transition-colors"
          >
            <ChevronLeft className="w-6 h-6 text-white" />
          </button>
          <button
            onClick={handleNext}
            className="absolute right-[12%] top-1/2 -translate-y-1/2 bg-white/20 backdrop-blur-sm p-2 rounded-full hover:bg-white/30 transition-colors"
          >
            <ChevronRight className="w-6 h-6 text-white" />
          </button>

          {/* Dots Indicator */}
          <div className="absolute -bottom-8 left-1/2 -translate-x-1/2 flex space-x-2">
            {images.map((_, index) => (
              <button
                key={index}
                onClick={() => {
                  setCurrentIndex(index);
                  setIsAutoPlaying(false);
                }}
                className={`w-2 h-2 rounded-full transition-colors duration-200 ${
                  index === currentIndex ? 'bg-white' : 'bg-white/40'
                }`}
              />
            ))}
          </div>
        </div>

        {/* Vision Statement */}
        <div className="text-center space-y-6">
          <h3 className="text-2xl md:text-3xl text-white/90 font-medium">
            Together, we end loneliness
          </h3>
          <p className="text-lg text-white/80 leading-relaxed max-w-4xl mx-auto">
            Since 2013, we've hosted over 600 events, engaged 40,000+ participants, and built a community that celebrates diversity, inclusivity, and joy. We create spaces where play brings people together—breaking barriers, fostering friendships, and creating a sense of belonging in Silicon Valley's fast-paced world. Our vision is to build a world where everyone has a community to call their own, built through the joy of shared experiences.
          </p>
        </div>
      </div>
    </section>
  );
};

export default MissionSection;

================
File: components/sections/Home/SponsorsSection/index.js
================
import React from 'react';

const SponsorsSection = () => {
  const basePath = `${process.env.PUBLIC_URL}/images/sponsor-logo/`;

  const sponsors = [
    {
      logo: `${basePath}BOA.avif`,
      link: 'https://www.bankofamerica.com/',
    },
    {
      logo: `${basePath}Starbucks-Logo.avif`,
      link: 'https://www.starbucks.com/',
    },
    {
      logo: `${basePath}Texas Roadhouse_edited.avif`,
      link: 'https://www.texasroadhouse.com/locations/80-union-cityca',
    },
    {
      logo: `${basePath}Stonemaier_edited.avif`,
      link: 'https://stonemaiergames.com/',
    },
    {
      logo: `${basePath}flyhigh.avif`,
      link: 'https://flyhightalent.com/',
    },
    {
      logo: `${basePath}safeway logo square.avif`,
      link: 'https://www.safeway.com/',
    },
    {
      logo: `${basePath}Game Toppers.avif`,
      link: 'https://www.gametoppersllc.com/',
    },
    {
      logo: `${basePath}Sunrise Tornado.avif`,
      link: 'https://www.sunrisetornado.com/',
    },
  ];

  const handleGiveToday = () => {
    const donationSection = document.getElementById('donation-options');

    if (donationSection) {
      donationSection.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  };

  return (
    <section className="max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      <div className="text-center space-y-4 mb-12">
        <h2 className="text-4xl md:text-5xl font-bold text-white/90">
          Thank You to Our Amazing Sponsors
        </h2>
        <p className="text-xl text-white/80 max-w-3xl mx-auto">
          We are proud to have the support of leading organizations and community
          partners who believe in building bridges through play.
        </p>
      </div>

      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-1 gap-y-6 max-w-4xl mx-auto">
        {sponsors.map((sponsor, index) => (
          <div
            key={index}
            className="flex items-center justify-center relative mx-auto bg-white rounded-full shadow-md w-20 h-20 overflow-hidden"
          >
            <a
              href={sponsor.link}
              target="_blank"
              rel="noopener noreferrer"
              className="w-full h-full flex items-center justify-center"
            >
              <img
                src={sponsor.logo}
                alt={`Sponsor ${index + 1}`}
                className="max-w-[70%] max-h-[70%] object-contain"
              />
            </a>
          </div>
        ))}
      </div>

      <div className="text-center space-y-6 mt-12">
        <p className="text-xl text-white/80">
          Join these game-changers in building a more connected Silicon Valley.
        </p>
        <button 
          onClick={handleGiveToday}
          className="
            px-8 
            py-3 
            rounded-xl
            text-lg
            font-bold
            tracking-wider
            text-white
            bg-gradient-to-r 
            from-indigo-400/70 
            to-blue-400/70
            backdrop-blur-md
            border-2
            border-white/40
            shadow-[0_0_15px_rgba(255,255,255,0.3)]
            transition-all
            duration-300
            hover:shadow-[0_0_20px_rgba(255,255,255,0.4)]
            hover:scale-105
            hover:from-indigo-300/80 
            hover:to-blue-300/80
            active:scale-95
            group
            relative
            overflow-hidden
          "
        >
          <span className="relative z-10 text-lg font-bold tracking-wider uppercase drop-shadow-[0_2px_2px_rgba(0,0,0,0.3)]">GIVE TODAY</span>
          <div className="
            absolute 
            inset-0 
            bg-gradient-to-r 
            from-purple-400/40 
            to-pink-400/40 
            opacity-0 
            group-hover:opacity-100 
            transition-opacity 
            duration-300
          "></div>
        </button>
      </div>
    </section>
  );
};

export default SponsorsSection;

================
File: config/paths.js
================
// src/config/paths.js
export const BASE_PATH = '/GameMixer';
export const IMAGE_PATH = `${process.env.PUBLIC_URL}/images`;

export const paths = {
  getImagePath: (path) => `${IMAGE_PATH}/${path}`,
  getRoutePath: (path) => `${BASE_PATH}${path}`
};

export default paths;

================
File: context/DonationContext.js
================
import React, { createContext, useContext, useState } from 'react';

const DonationContext = createContext(undefined);

export function DonationProvider({ children }) {
  const [selectedAmount, setSelectedAmount] = useState(null);
  const [donationType, setDonationType] = useState('financial');
  const [customAmount, setCustomAmount] = useState('');

  const setDonationAmount = (amount) => {
    setSelectedAmount(amount);
    setCustomAmount(amount ? amount.toString() : '');
  };

  const value = {
    selectedAmount,
    donationType,
    customAmount,
    setDonationAmount,
    setDonationType,
    setCustomAmount
  };

  return (
    <DonationContext.Provider value={value}>
      {children}
    </DonationContext.Provider>
  );
}

export function useDonation() {
  const context = useContext(DonationContext);
  if (context === undefined) {
    throw new Error('useDonation must be used within a DonationProvider');
  }
  return context;
}

================
File: pages/Home/index.jsx
================
// src/pages/Home/index.jsx
import React from 'react';
import Hero from '../../components/sections/Home/Hero';
import DonationOptions from '../../components/sections/Home/DonationOptions';
import ImpactMetrics from '../../components/sections/Home/ImpactMetrics';
import EventCarousel from '../../components/sections/Home/EventCarousel';
import MissionSection from '../../components/sections/Home/MissionSection';
import CallToAction from '../../components/sections/Home/CallToAction';
import SponsorsSection from '../../components/sections/Home/SponsorsSection';
import { DonationProvider } from '../../context/DonationContext';

const HomePage = () => {
  return (
    <DonationProvider>
      <div>
        <Hero />
        <DonationOptions />
        <ImpactMetrics />
        <EventCarousel />
        <MissionSection />
        <CallToAction />
        <SponsorsSection />
      </div>
    </DonationProvider>
  );
};

export default HomePage;

================
File: styles/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-background text-gray-800;
  }
}

@layer components {
  .container-padding {
    @apply px-4 md:px-6 lg:px-8;
  }
}

================
File: App.js
================
import React from 'react';
import { HashRouter as Router } from 'react-router-dom';
import MainLayout from './components/layout/MainLayout';
import HomePage from './pages/Home';
import './styles/globals.css';

function App() {
  return (
    <Router>
      <MainLayout>
        <HomePage />
      </MainLayout>
    </Router>
  );
}

export default App;

================
File: App.test.js
================
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

================
File: index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import reportWebVitals from './reportWebVitals';
import './styles/globals.css';  // 更改为新的样式文件路径

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

reportWebVitals();

================
File: reportWebVitals.js
================
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================
File: setupTests.js
================
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';
