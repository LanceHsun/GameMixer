This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2025-02-05T04:07:18.546Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
components/
  common/
    Button/
      index.js
    PhotoModal/
      index.js
  layout/
    Footer/
      index.js
    FullpageScroll/
      index.js
    Header/
      index.jsx
    MainLayout/
      index.js
    MobileNavigation /
      index.js
  PromotionalCarousel/
    index.js
  sections/
    Home/
      CallToAction/
        index.js
      ContactSection/
        index.js
      DonationOptions/
        index.js
      EventCarousel/
        index.js
      Hero/
        index.js
      ImpactMetrics/
        index.js
      IndustryBreakdown/
        index.js
      MissionSection/
        index.js
      SponsorsSection/
        index.js
      TestimonialsSection/
        index.js
      WordCloudSection/
        index.js
config/
  paths.js
context/
  DonationContext.js
pages/
  Donation/
    index.jsx
  Events/
    PastEventDetail/
      index.js
    EventDetail.js
    index.js
  Home/
    index.jsx
styles/
  globals.css
App.js
App.test.js
index.js
reportWebVitals.js
setupTests.js

================================================================
Repository Files
================================================================

================
File: components/common/Button/index.js
================
import React from 'react';

const Button = ({
  children,
  onClick,
  size = 'medium',
  className = '',
  type = 'button',
  disabled = false,
  variant = 'primary'
}) => {
  // Size classes configuration
  const sizeClasses = {
    small: 'px-4 py-2 text-sm',
    medium: 'px-6 py-3 text-base',
    large: 'px-8 py-4 text-lg'
  };

  // Variant classes configuration
  const variantClasses = {
    primary: 'bg-[#FFD200] text-[#2C2C2C] hover:bg-[#FFE566]',
    secondary: 'bg-white text-[#2C2C2C] border border-[#2C2C2C] hover:bg-gray-50',
    outline: 'bg-transparent border-2 border-white text-white hover:bg-white/10'
  };

  return (
    <button
      type={type}
      onClick={onClick}
      disabled={disabled}
      className={`
        ${sizeClasses[size]}
        ${variantClasses[variant]}
        rounded-lg
        font-bold
        transition-all
        duration-200
        ${disabled ? 'opacity-50 cursor-not-allowed' : 'transform hover:scale-[1.02] active:scale-[0.98]'}
        ${className}
      `}
    >
      {children}
    </button>
  );
};

// Default props
Button.defaultProps = {
  size: 'medium',
  className: '',
  type: 'button',
  disabled: false,
  variant: 'primary'
};

export default Button;

================
File: components/common/PhotoModal/index.js
================
import React from 'react';
import { X, ChevronLeft, ChevronRight } from 'lucide-react';

const PhotoModal = ({ 
  isOpen, 
  onClose, 
  currentPhoto, 
  onNext, 
  onPrevious, 
  photos,
  currentIndex 
}) => {
  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center">
      {/* Close Button */}
      <button
        onClick={onClose}
        className="absolute top-4 right-4 z-20 p-2 rounded-full bg-black/50 hover:bg-black/70 text-white transition-colors"
        aria-label="Close modal"
      >
        <X className="w-6 h-6" />
      </button>

      {/* Backdrop */}
      <div 
        className="absolute inset-0 bg-black/80 backdrop-blur-sm"
        onClick={onClose}
      />

      {/* Modal Content */}
      <div className="relative w-full max-w-6xl mx-4 z-10">
        {/* Image Container */}
        <div className="relative aspect-[4/3] bg-black rounded-lg overflow-hidden">
          <img
            src={currentPhoto.url}
            alt={currentPhoto.alt}
            className="w-full h-full object-contain"
          />

          {/* Navigation Buttons */}
          {currentIndex > 0 && (
            <button
              onClick={onPrevious}
              className="absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-black/50 hover:bg-black/70 text-white transition-colors"
            >
              <ChevronLeft className="w-6 h-6" />
            </button>
          )}
          {currentIndex < photos.length - 1 && (
            <button
              onClick={onNext}
              className="absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-black/50 hover:bg-black/70 text-white transition-colors"
            >
              <ChevronRight className="w-6 h-6" />
            </button>
          )}
        </div>

        {/* Photo Info */}
        <div className="mt-4 text-white text-center">
          <p className="text-sm opacity-80">
            {currentIndex + 1} of {photos.length}
          </p>
          {currentPhoto.description && (
            <p className="mt-2 text-lg">{currentPhoto.description}</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default PhotoModal;

================
File: components/layout/Footer/index.js
================
// components/layout/Footer/index.js
import React from 'react';
import { Link } from 'react-router-dom';

const Footer = () => {
  const socialLinks = [
    {
      icon: (
        <svg role="img" viewBox="0 0 24 24" className="w-6 h-6 fill-current">
          <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
        </svg>
      ),
      href: 'https://facebook.com',
      label: 'Facebook'
    },
    {
      icon: (
        <svg role="img" viewBox="0 0 24 24" className="w-6 h-6 fill-current">
          <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/>
        </svg>
      ),
      href: 'https://instagram.com',
      label: 'Instagram'
    },
    {
      icon: (
        <img 
          src={process.env.PUBLIC_URL + "/images/social-media-logo/XiaohongshuLOGO.png"} 
          alt="Xiaohongshu" 
          className="w-6 h-6 object-contain"
        />
      ),
      href: 'https://xiaohongshu.com',
      label: 'Xiaohongshu'
    }
  ];

  return (
    <footer className="bg-white">
      {/* Social Media Links */}
      <div className="max-w-screen-lg mx-auto px-4 py-6 border-b border-gray-200">
        <div className="flex justify-center space-x-6">
          {socialLinks.map((link, index) => (
            <a
              key={index}
              href={link.href}
              className="w-10 h-10 flex items-center justify-center rounded-full hover:bg-gray-100 text-[#2C2C2C] transition-colors"
              aria-label={link.label}
              target="_blank"
              rel="noopener noreferrer"
            >
              {link.icon}
            </a>
          ))}
        </div>
      </div>

      {/* Main Footer Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <nav className="flex justify-center gap-10 mb-8">
          <Link 
            to="/" 
            className="text-[#2C2C2C] hover:text-[#6B90FF] transition-colors"
          >
            Get to Know Us
          </Link>
          <Link 
            to="/events" 
            className="text-[#2C2C2C] hover:text-[#6B90FF] transition-colors"
          >
            Get Involved
          </Link>
          <Link 
            to="/donate" 
            className="text-[#2C2C2C] hover:text-[#6B90FF] transition-colors"
          >
            Give Today
          </Link>
        </nav>

        {/* Copyright */}
        <div className="text-center">
          <p className="text-gray-500 text-sm">
            ©2024 by Game Mixer A Nonprofit Organization
          </p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;

================
File: components/layout/FullpageScroll/index.js
================
import React, { useEffect, useRef, useState } from 'react';

const FullpageScroll = ({ children }) => {
  const containerRef = useRef(null);
  const sectionsRef = useRef([]);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const sections = React.Children.toArray(children);

  useEffect(() => {
    const handleScroll = (e) => {
      if (isTransitioning) {
        return;
      }

      const container = containerRef.current;
      const sectionElements = sectionsRef.current;
      
      // 获取当前视口中最接近中心的section
      const viewportMiddle = window.scrollY + window.innerHeight / 2;
      const currentSectionIndex = sectionElements.findIndex((section, index) => {
        const rect = section.getBoundingClientRect();
        const sectionTop = window.scrollY + rect.top;
        const sectionBottom = sectionTop + rect.height;
        return viewportMiddle >= sectionTop && viewportMiddle < sectionBottom;
      });

      if (currentSectionIndex === -1) return;

      const currentSection = sectionElements[currentSectionIndex];
      const rect = currentSection.getBoundingClientRect();
      
      // 检查是否在section的边界
      const isAtTop = rect.top >= 0 && rect.top <= 5;
      const isAtBottom = rect.bottom >= window.innerHeight - 5 && rect.bottom <= window.innerHeight;
      
      if (isAtTop || isAtBottom) {
        const nextIndex = isAtTop ? 
          Math.max(0, currentSectionIndex - 1) : 
          Math.min(sections.length - 1, currentSectionIndex + 1);

        if (nextIndex !== currentSectionIndex) {
          setIsTransitioning(true);
          const nextSection = sectionElements[nextIndex];
          nextSection.scrollIntoView({ behavior: 'smooth' });
          
          setTimeout(() => {
            setIsTransitioning(false);
          }, 1000);
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [sections.length, isTransitioning]);

  // 初始化section引用
  useEffect(() => {
    sectionsRef.current = Array.from(
      containerRef.current.getElementsByClassName('fullpage-section')
    );
  }, []);

  return (
    <div ref={containerRef} className="w-full">
      {sections.map((section, index) => (
        <div 
          key={index}
          className="fullpage-section min-h-screen w-full"
        >
          {section}
        </div>
      ))}
    </div>
  );
};

export default FullpageScroll;

================
File: components/layout/Header/index.jsx
================
import React from 'react';
import { Link } from 'react-router-dom';

const Header = () => {
  return (
    <header className="bg-white border-b border-gray-100">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo - Links to homepage */}
          <Link to="/" className="flex items-center gap-2">
            <img 
              src={process.env.PUBLIC_URL + "/images/Game-mixer-logo.avif"} 
              alt="Game Mixer Logo" 
              className="w-10 h-10 object-contain bg-[#FFD200] p-1 rounded-lg"
            />
            <span className="text-[#2C2C2C] font-bold text-xl">Game Mixer</span>
          </Link>

          {/* Navigation Links */}
          <nav className="flex items-center gap-10">
            <Link 
              to="/" 
              className="text-[#2C2C2C] hover:text-[#6B90FF] transition-colors"
            >
              Get to Know Us
            </Link>
            <Link 
              to="/events" 
              className="text-[#2C2C2C] hover:text-[#6B90FF] transition-colors"
            >
              Get Involved
            </Link>
            <Link 
              to="/donate" 
              className="bg-[#FFD200] text-[#2C2C2C] px-6 py-2 rounded-lg font-bold hover:bg-[#FFE566] transition-colors"
            >
              GIVE TODAY
            </Link>
          </nav>
        </div>
      </div>
    </header>
  );
};

export default Header;

================
File: components/layout/MainLayout/index.js
================
import React from 'react';
import { useLocation } from 'react-router-dom';
import Header from '../Header';
import Footer from '../Footer';
import MobileNavigation from '../MobileNavigation '; // Note the space after 'MobileNavigation'

const MainLayout = ({ children }) => {
  const location = useLocation();
  const isHomePage = location.pathname === '/';

  return (
    <div className="min-h-screen flex flex-col bg-[#FAF6F0] overflow-x-hidden w-full">
      <Header />
      <main className="flex-grow">
        {children}
      </main>
      <Footer />
      {isHomePage && <MobileNavigation />}
    </div>
  );
};

export default MainLayout;

================
File: components/layout/MobileNavigation /index.js
================
// components/layout/MobileNavigation/index.js
import React, { useState } from 'react';
import { useLocation } from 'react-router-dom';
import { Menu, X, Home, Gift, Users, Trophy, Heart, Building2, MessageCircle, Calendar } from 'lucide-react';

const MobileNavigation = () => {
  const [isOpen, setIsOpen] = useState(false);
  const location = useLocation();

  if (location.pathname !== '/') {
    return null;
  }

  const sections = [
    { name: 'Mission', icon: Home, id: 'mission-section' },
    { name: 'Impact', icon: Trophy, id: 'impact-metrics' },
    { name: 'Events', icon: Calendar, id: 'event-carousel' },
    { name: 'Industry', icon: Building2, id: 'industry-breakdown' },
    { name: 'Testimonials', icon: MessageCircle, id: 'testimonials' },
    { name: 'Donate', icon: Heart, id: 'call-to-action' },
    { name: 'Sponsors', icon: Gift, id: 'sponsors' },
    { name: 'Contact', icon: MessageCircle, id: 'contact' },
  ];

  const scrollToSection = (id) => {
    const section = document.getElementById(id);
    if (section) {
      section.scrollIntoView({ behavior: 'smooth' });
      setIsOpen(false);
    }
  };

  return (
    <div className="md:hidden">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="fixed left-4 bottom-4 w-12 h-12 bg-[#FFD200] rounded-full flex items-center justify-center shadow-lg z-50 transition-transform duration-300 hover:scale-110 active:scale-95"
        aria-label={isOpen ? 'Close navigation menu' : 'Open navigation menu'}
      >
        {isOpen ? (
          <X className="w-6 h-6 text-[#2C2C2C]" />
        ) : (
          <Menu className="w-6 h-6 text-[#2C2C2C]" />
        )}
      </button>

      {isOpen && (
        <>
          <div className="fixed left-4 bottom-20 bg-white rounded-lg shadow-lg z-40">
            <nav className="py-2">
              {sections.map((section, index) => {
                const Icon = section.icon;
                return (
                  <button
                    key={index}
                    onClick={() => scrollToSection(section.id)}
                    className="w-full flex items-center gap-3 px-6 py-3 text-[#2C2C2C] hover:bg-[#FFD200]/10 transition-colors"
                  >
                    <Icon className="w-5 h-5" />
                    <span className="text-sm font-medium">{section.name}</span>
                  </button>
                );
              })}
            </nav>
          </div>

          <div
            className="fixed inset-0 bg-black/20 backdrop-blur-sm z-30"
            onClick={() => setIsOpen(false)}
          />
        </>
      )}
    </div>
  );
};

export default MobileNavigation;

================
File: components/PromotionalCarousel/index.js
================
import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

const PromotionalCarousel = ({ events }) => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const navigate = useNavigate();

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % events.length);
    }, 4000);

    return () => clearInterval(timer);
  }, [events.length]);

  const handlePrevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + events.length) % events.length);
  };

  const handleNextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % events.length);
  };

  const handleDotClick = (index) => {
    setCurrentSlide(index);
  };

  const handleMakePlan = (eventSlug) => {
    navigate(`/events/${eventSlug}`);
  };

  return (
    <div className="relative h-[600px] border-4 border-[#FFD200]">
      {/* Carousel Images */}
      <div className="relative w-full h-full overflow-hidden">
        {events.map((event, index) => (
          <div
            key={event.id}
            className="absolute w-full h-full transition-transform duration-500 ease-in-out"
            style={{
              transform: `translateX(${(index - currentSlide) * 100}%)`,
            }}
          >
            <img
              src={event.image}
              alt={event.title}
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-black/40 flex flex-col items-center text-white">
              <div className="mt-12 text-center">
                <p className="text-xl">{event.location}</p>
              </div>
              
              <div className="flex-1 flex flex-col items-center justify-center text-center px-4">
                <h1 className="text-4xl md:text-5xl font-bold mb-8">{event.title}</h1>
                <button
                  onClick={() => handleMakePlan(event.slug)}
                  className="bg-[#FFD200] text-black px-8 py-3 rounded-lg font-bold hover:bg-[#FFE566] transition-colors"
                >
                  Make Plan Now
                </button>
              </div>
              
              <div className="mb-12 text-center">
                <p className="text-xl mb-2">{event.date}</p>
                <p className="text-xl">{event.time}</p>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Navigation Arrows */}
      <button
        onClick={handlePrevSlide}
        className="absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/20 hover:bg-white/30 text-white transition-colors"
      >
        <ChevronLeft className="w-6 h-6" />
      </button>
      <button
        onClick={handleNextSlide}
        className="absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/20 hover:bg-white/30 text-white transition-colors"
      >
        <ChevronRight className="w-6 h-6" />
      </button>

      {/* Navigation Dots */}
      <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex space-x-2">
        {events.map((_, index) => (
          <button
            key={index}
            onClick={() => handleDotClick(index)}
            className={`w-2 h-2 rounded-full transition-colors ${
              currentSlide === index ? 'bg-white' : 'bg-white/50'
            }`}
          />
        ))}
      </div>
    </div>
  );
};

export default PromotionalCarousel;

================
File: components/sections/Home/CallToAction/index.js
================
import React from 'react';
import { useDonation } from '../../../../context/DonationContext';

const CallToAction = () => {
  const { setDonationAmount } = useDonation();

  const handleDonateClick = () => {
    const element = document.getElementById('donation-options');
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
      setDonationAmount(40);
    }
  };

  return (
    <section id="call-to-action" className="max-w-5xl mx-auto px-4 py-8 md:py-12">
      <div className="flex flex-col-reverse md:flex-row items-start gap-6 md:gap-8">
        {/* Content Area */}
        <div className="w-full md:w-1/2 space-y-4 mt-12 md:mt-0 flex flex-col items-center text-center">
          <h2 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium font-serif leading-tight">
            Ready to multiply joy in the Valley?
          </h2>
          
          <p className="text-lg text-[#2C2C2C]/80">
            Every $40 helps one person find their community. Join us in creating spaces where 
            friendships begin.
          </p>
          
          <button 
            onClick={handleDonateClick}
            className="mt-4 bg-[#FFD200] text-[#2C2C2C] px-6 py-2.5 rounded-lg font-bold 
                     hover:bg-[#FFE566] transition-all duration-300 transform hover:scale-105"
          >
            GIVE $40
          </button>
        </div>

        {/* Visual Elements - Updated margin-top for md screens */}
        <div className="w-full md:w-1/2 my-16 md:-mt-11 md:mb-8">
          <div className="relative max-w-[420px] mx-auto h-60 md:h-96">
            <div className="absolute left-0 -top-4 w-[240px] aspect-[4/3] rounded-lg shadow-md overflow-hidden 
                          transform -rotate-6 origin-bottom-left hover:rotate-0 transition-transform duration-300">
              <img 
                src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
                alt="Board game hero"
                className="w-full h-full object-cover"
              />
            </div>
            
            <div className="absolute right-0 top-8 w-[240px] aspect-[4/3] rounded-lg shadow-md overflow-hidden
                          hover:transform hover:scale-105 transition-transform duration-300">
              <img 
                src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
                alt="Board game hero"
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default CallToAction;

================
File: components/sections/Home/ContactSection/index.js
================
// components/sections/Home/ContactSection/index.js
import React, { useState } from 'react';

const ContactSection = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: '',
    category: ''
  });
  const [errors, setErrors] = useState({});

  const categories = [
    'Sponsors and Partners',
    'Donation',
    'Membership',
    'Volunteers',
    'Other'
  ];


  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: ''
      }));
    }
  };

  const validateForm = () => {
    const newErrors = {};
    if (!formData.name.trim()) newErrors.name = 'Name is required';
    if (!formData.email.trim()) newErrors.email = 'Email is required';
    else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = 'Please enter a valid email';
    }
    if (!formData.message.trim()) newErrors.message = 'Message is required';
    if (!formData.category) newErrors.category = 'Please select a category';

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!validateForm()) return;
    console.log('Form submitted:', formData);
    setFormData({
      name: '',
      email: '',
      message: '',
      category: ''
    });
  };

  return (
    <section id="contact" className="bg-gradient-to-b from-[#FAF6F0] to-white py-12">
      <div className="max-w-3xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-[#2C2C2C] text-center mb-6">CONTACT</h2>
        
        <div className="text-center mb-6">
          <p className="text-lg text-[#2C2C2C]">Santa Clara, CA, USA</p>
          <a href="mailto:admin@game-mixer.org" className="text-lg text-[#6B90FF] hover:underline">
            admin@game-mixer.org
          </a>
          
        </div>

        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <input
              type="text"
              name="name"
              placeholder="Name"
              value={formData.name}
              onChange={handleChange}
              className={`w-full p-2.5 border-b-2 bg-transparent focus:outline-none transition-colors
                ${errors.name ? 'border-red-500' : 'border-[#2C2C2C]/20 focus:border-[#6B90FF]'}`}
            />
            {errors.name && (
              <p className="mt-1 text-sm text-red-500">{errors.name}</p>
            )}
          </div>

          <div>
            <input
              type="email"
              name="email"
              placeholder="Email"
              value={formData.email}
              onChange={handleChange}
              className={`w-full p-2.5 border-b-2 bg-transparent focus:outline-none transition-colors
                ${errors.email ? 'border-red-500' : 'border-[#2C2C2C]/20 focus:border-[#6B90FF]'}`}
            />
            {errors.email && (
              <p className="mt-1 text-sm text-red-500">{errors.email}</p>
            )}
          </div>

          <div>
            <textarea
              name="message"
              placeholder="Type your message here..."
              value={formData.message}
              onChange={handleChange}
              rows={3}
              className={`w-full p-2.5 border-b-2 bg-transparent focus:outline-none transition-colors
                ${errors.message ? 'border-red-500' : 'border-[#2C2C2C]/20 focus:border-[#6B90FF]'}`}
            />
            {errors.message && (
              <p className="mt-1 text-sm text-red-500">{errors.message}</p>
            )}
          </div>

          <div>
            <select
              name="category"
              value={formData.category}
              onChange={handleChange}
              className={`w-full p-2.5 border-b-2 bg-transparent focus:outline-none transition-colors
                ${errors.category ? 'border-red-500' : 'border-[#2C2C2C]/20 focus:border-[#6B90FF]'}
                ${!formData.category ? 'text-[#2C2C2C]/50' : 'text-[#2C2C2C]'}`}
            >
              <option value="" disabled>Category</option>
              {categories.map(category => (
                <option key={category} value={category}>{category}</option>
              ))}
            </select>
            {errors.category && (
              <p className="mt-1 text-sm text-red-500">{errors.category}</p>
            )}
          </div>

          <div className="text-center pt-4">
            <button
              type="submit"
              className="bg-[#FFD200] text-[#2C2C2C] px-10 py-2.5 rounded-lg font-bold hover:bg-[#FFE566] transition-colors"
            >
              SUBMIT
            </button>
          </div>
        </form>
      </div>
    </section>
  );
};

export default ContactSection;

================
File: components/sections/Home/DonationOptions/index.js
================
import React, { useState } from 'react';
import { ChevronDown } from 'lucide-react';
import GradientButton from '../../../common/Button';
import { useDonation } from '../../../../context/DonationContext';

const DonationOptions = () => {
  const {
    selectedAmount,
    donationType,
    customAmount,
    setDonationAmount,
    setDonationType,
    setCustomAmount
  } = useDonation();

  const [paymentMethod, setPaymentMethod] = useState('');
  const [cardDetails, setCardDetails] = useState({
    number: '',
    name: '',
    expiry: '',
    cvv: ''
  });

  const getNextSaturday = () => {
    const today = new Date();
    const day = today.getDay(); // 0 是周日，6 是周六
    const daysUntilSaturday = (6 - day + 7) % 7;
    const nextSaturday = new Date(today);
    nextSaturday.setDate(today.getDate() + daysUntilSaturday);
    return nextSaturday.toLocaleDateString('en-US', { 
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const nextEventDate = getNextSaturday();

  const donationOptions = [
    { amount: 40, description: 'Supports a participant' },
    { amount: 240, description: 'Event Games support' },
    { amount: 1000, description: 'Large event support' }
  ];

  const handleAmountChange = (e) => {
    const value = e.target.value.replace(/[^0-9]/g, '');
    setCustomAmount(value);
    setDonationAmount(null);
  };

  const handleDonationTypeChange = (type) => {
    setDonationType(type);
    if (type === 'goods') {
      setDonationAmount(null);
      setCustomAmount('');
    }
  };

  const renderPaymentFields = () => {
    switch (paymentMethod) {
      case 'credit_card':
        return (
          <div className="space-y-4">
            <div>
              <label className="block text-[#2C2C2C] font-medium mb-1.5">Card Number</label>
              <input
                type="text"
                maxLength="16"
                placeholder="1234 5678 9012 3456"
                className="w-full p-3 rounded-lg border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
                value={cardDetails.number}
                onChange={(e) => setCardDetails({...cardDetails, number: e.target.value.replace(/\D/g, '')})}
              />
            </div>
            <div>
              <label className="block text-[#2C2C2C] font-medium mb-2">Cardholder Name</label>
              <input
                type="text"
                placeholder="John Doe"
                className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
                value={cardDetails.name}
                onChange={(e) => setCardDetails({...cardDetails, name: e.target.value})}
              />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="block text-[#2C2C2C] font-medium mb-2">Expiry Date</label>
                <input
                  type="text"
                  placeholder="MM/YY"
                  maxLength="5"
                  className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
                  value={cardDetails.expiry}
                  onChange={(e) => setCardDetails({...cardDetails, expiry: e.target.value})}
                />
              </div>
              <div>
                <label className="block text-[#2C2C2C] font-medium mb-2">CVV</label>
                <input
                  type="password"
                  maxLength="4"
                  placeholder="123"
                  className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
                  value={cardDetails.cvv}
                  onChange={(e) => setCardDetails({...cardDetails, cvv: e.target.value.replace(/\D/g, '')})}
                />
              </div>
            </div>
          </div>
        );
      case 'paypal':
        return (
          <div className="text-center bg-[#2C2C2C]/5 rounded-xl p-8">
            <p className="text-[#2C2C2C] text-lg">You will be redirected to PayPal to complete your donation.</p>
          </div>
        );
      default:
        return null;
    }
  };

  return (
    <section id="donation-options" className="max-w-5xl mx-auto px-4 md:px-6 py-12 md:py-16">
      <div className="max-w-3xl mx-auto space-y-8">
        <div className="text-center space-y-4">
          <h2 className="text-3xl md:text-4xl font-bold text-[#2C2C2C] tracking-tight">
            Support Our Community Your Way
          </h2>
          <p className="text-xl text-[#2C2C2C]/70">
            Choose how you'd like to make a difference
          </p>
          <p className="text-lg text-[#2C2C2C]/70">
            Join us for our next event on {nextEventDate}
          </p>
        </div>

        {/* Donation Amount Options */}
        <div className="grid grid-cols-3 gap-3">
          {donationOptions.map((option) => (
            <button
              key={option.amount}
              onClick={() => {
                setDonationAmount(option.amount);
                setDonationType('financial');
              }}
              className={`p-4 rounded-lg transition-all duration-300 ${
                selectedAmount === option.amount
                  ? 'bg-[#FFD200] shadow-lg scale-105 border-2 border-[#2C2C2C]'
                  : 'bg-white hover:bg-[#FFD200]/10 border-2 border-[#2C2C2C]/10'
              }`}
            >
              <div className="text-xl font-bold text-[#2C2C2C]">${option.amount}</div>
              <div className="text-sm text-[#2C2C2C]/70 mt-2">{option.description}</div>
            </button>
          ))}
        </div>

        {/* Donation Type Buttons */}
        <div className="grid grid-cols-2 gap-4">
          <button
            onClick={() => handleDonationTypeChange('financial')}
            className={`p-6 rounded-xl transition-all duration-300 ${
              donationType === 'financial'
                ? 'bg-[#FFD200] shadow-lg scale-105 border-2 border-[#2C2C2C]'
                : 'bg-white hover:bg-[#FFD200]/10 border-2 border-[#2C2C2C]/10'
            }`}
          >
            <span className="text-xl font-bold text-[#2C2C2C]">Donate Now</span>
          </button>
          <button
            onClick={() => handleDonationTypeChange('goods')}
            className={`p-6 rounded-xl transition-all duration-300 ${
              donationType === 'goods'
                ? 'bg-[#FFD200] shadow-lg scale-105 border-2 border-[#2C2C2C]'
                : 'bg-white hover:bg-[#FFD200]/10 border-2 border-[#2C2C2C]/10'
            }`}
          >
            <span className="text-xl font-bold text-[#2C2C2C]">Offer Goods</span>
          </button>
        </div>

        {/* Dynamic Form Based on Donation Type */}
        {donationType && (
          <form className="space-y-4 bg-white p-5 rounded-lg border-2 border-[#2C2C2C]/10">
            {donationType === 'financial' ? (
              <>
                <div className="space-y-2">
                  <label className="block text-[#2C2C2C] font-medium">Donation Amount (USD)</label>
                  <div className="relative">
                    <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-[#2C2C2C]">$</span>
                    <input
                      type="text"
                      value={customAmount}
                      onChange={handleAmountChange}
                      placeholder="Enter amount in USD"
                      className="w-full p-3 pl-7 rounded-lg border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
                    />
                  </div>
                </div>
                <div className="space-y-2">
                  <label className="block text-[#2C2C2C] font-medium">Payment Method</label>
                  <div className="relative">
                    <select 
                      className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] appearance-none transition duration-200"
                      value={paymentMethod}
                      onChange={(e) => setPaymentMethod(e.target.value)}
                    >
                      <option value="">Select payment method</option>
                      <option value="credit_card">Credit/Debit Card</option>
                      <option value="paypal">PayPal</option>
                    </select>
                    <ChevronDown className="absolute right-4 top-1/2 transform -translate-y-1/2 text-[#2C2C2C]" />
                  </div>
                </div>
                {renderPaymentFields()}
              </>
            ) : (
              <>
                <div className="space-y-2">
                  <label className="block text-[#2C2C2C] font-medium">Donation Type</label>
                  <div className="relative">
                    <select className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] appearance-none transition duration-200">
                      <option>Select donation type</option>
                      <option>Venue Space</option>
                      <option>Games</option>
                      <option>Gifts</option>
                      <option>Other</option>
                    </select>
                    <ChevronDown className="absolute right-4 top-1/2 transform -translate-y-1/2 text-[#2C2C2C]" />
                  </div>
                </div>
                <div className="space-y-2">
                  <label className="block text-[#2C2C2C] font-medium">Donation Details</label>
                  <textarea
                    placeholder="Please describe the items or venue you would like to donate..."
                    className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 min-h-32 transition duration-200"
                  />
                </div>
              </>
            )}

            <div className="space-y-2">
              <label className="block text-[#2C2C2C] font-medium">Contact Email</label>
              <input
                type="email"
                placeholder="Enter your email address"
                className="w-full p-4 rounded-xl border-2 border-[#2C2C2C]/10 focus:border-[#FFD200] focus:ring-2 focus:ring-[#FFD200]/20 bg-white text-[#2C2C2C] placeholder:text-[#2C2C2C]/40 transition duration-200"
              />
            </div>

            <p className="text-sm text-[#2C2C2C]/70">
              {donationType === 'financial'
                ? 'We will send you a donation receipt and our thanks via email'
                : 'We will contact you via email to discuss further collaboration details'}
            </p>

            <div className="flex justify-end pt-4">
              <button
                type="submit"
                className="px-8 py-3 bg-[#FFD200] text-[#2C2C2C] rounded-xl font-bold text-lg hover:bg-[#FFE566] transition-colors duration-300 transform hover:scale-105 active:scale-95"
              >
                Give
              </button>
            </div>
          </form>
        )}
      </div>
    </section>
  );
};

export default DonationOptions;

================
File: components/sections/Home/EventCarousel/index.js
================
import React, { useState } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { paths } from '../../../../../src/config/paths';

const EventCarousel = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [slideDirection, setSlideDirection] = useState('right');

  const events = [
    {
      title: 'Weekly Board Game Socials',
      description: 'Every Saturday, 80-120 participants connect through curated games that spark laughter, collaboration, and friendships.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/weekly-socials')
    },
    {
      title: 'Monthly Tournament',
      description: 'Join our competitive yet friendly tournament series featuring strategy games and exciting prizes.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/tournaments')
    },
    {
      title: 'Family Game Day',
      description: 'A special monthly event designed for families to bond over board games and create lasting memories.',
      image: paths.getImagePath('picture/hero.avif'),
      link: paths.getRoutePath('/events/family-day')
    }
  ];

  const nextSlide = () => {
    setSlideDirection('right');
    setCurrentSlide((prev) => (prev + 1) % events.length);
  };

  const prevSlide = () => {
    setSlideDirection('left');
    setCurrentSlide((prev) => (prev - 1 + events.length) % events.length);
  };

  const goToSlide = (index) => {
    setSlideDirection(index > currentSlide ? 'right' : 'left');
    setCurrentSlide(index);
  };

  return (
    <section id="event-carousel" className="bg-[#FAF6F0] px-4 py-8 md:py-12">
      <div className="max-w-screen-lg mx-auto">
        <div className="text-center mb-8">
          <h2 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium mb-3 font-serif">
            When You Give, Communities Thrive
          </h2>
          <p className="text-lg text-[#2C2C2C]/70">
            See how your donation transforms Saturday nights into life-changing social connections
          </p>
        </div>

        <div className="relative max-w-2xl mx-auto">
          <div 
            key={currentSlide}
            className={`h-[400px] rounded-xl overflow-hidden relative
              ${slideDirection === 'right' ? 'translate-x-full opacity-0' : '-translate-x-full opacity-0'}
              animate-slideIn`}
            style={{
              animation: `slideIn${slideDirection === 'right' ? 'Right' : 'Left'} 0.5s forwards`
            }}
          >
            {/* Background Image with Gradient Overlay */}
            <div className="absolute inset-0">
              <img
                src={events[currentSlide].image}
                alt={events[currentSlide].title}
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-gradient-to-r from-[#FFF4CC] via-[#FFF4CC]/60 to-white/60 backdrop-blur-sm" />
            </div>

            {/* Content - Updated Typography */}
            <div className="relative h-full flex flex-col justify-between p-8">
              <div className="max-w-xl">
                <h3 className="text-2xl md:text-3xl text-[#2C2C2C] font-medium mb-4 font-serif">
                  {events[currentSlide].title}
                </h3>
                <p className="text-base text-[#2C2C2C]/70 leading-relaxed">
                  {events[currentSlide].description}
                </p>
              </div>
              
              <div className="self-end">
                <a 
                  href={events[currentSlide].link}
                  className="text-base text-[#2C2C2C]/70 hover:text-[#2C2C2C] transition-colors hover:underline inline-flex items-center gap-2"
                >
                  Read more
                </a>
              </div>
            </div>
          </div>

          {/* Navigation Buttons */}
          <button 
            onClick={prevSlide}
            className="absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-[#2C2C2C]/10 hover:bg-[#2C2C2C]/20 text-[#2C2C2C] transition-colors z-10"
            aria-label="Previous slide"
          >
            <ChevronLeft className="w-6 h-6" />
          </button>
          <button 
            onClick={nextSlide}
            className="absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-[#2C2C2C]/10 hover:bg-[#2C2C2C]/20 text-[#2C2C2C] transition-colors z-10"
            aria-label="Next slide"
          >
            <ChevronRight className="w-6 h-6" />
          </button>

          {/* Slide Indicators */}
          <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex justify-center gap-2 z-10">
            {events.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`w-2 h-2 rounded-full transition-colors ${
                  currentSlide === index ? 'bg-[#2C2C2C]' : 'bg-[#2C2C2C]/40'
                }`}
                aria-label={`Go to slide ${index + 1}`}
              />
            ))}
          </div>
        </div>

        <style jsx>{`
          @keyframes slideInRight {
            from {
              transform: translateX(100%);
              opacity: 0;
            }
            to {
              transform: translateX(0);
              opacity: 1;
            }
          }

          @keyframes slideInLeft {
            from {
              transform: translateX(-100%);
              opacity: 0;
            }
            to {
              transform: translateX(0);
              opacity: 1;
            }
          }
        `}</style>
      </div>
    </section>
  );
};

export default EventCarousel;

================
File: components/sections/Home/Hero/index.js
================
import React from 'react';
import { Coins, House, Gift, Gamepad2, Calendar, MapPin, Users } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

const DonationCard = ({ title, description, icon: Icon }) => {
  const navigate = useNavigate();
  const [firstLine, secondLine] = description.split(' & ');
  
  return (
    <div 
      className="bg-white rounded-lg p-3 md:p-6 h-full transition-all duration-300 hover:shadow-lg cursor-pointer border border-gray-100"
      onClick={() => navigate('/donate')}
    >
      <div className="flex items-center gap-2 md:gap-3 mb-2 md:mb-4">
        <Icon className="w-5 h-5 md:w-6 md:h-6 text-[#2C2C2C]" />
        <h3 className="text-base md:text-lg font-semibold text-[#2C2C2C] line-clamp-1">{title}</h3>
      </div>
      <div className="space-y-0.5 md:space-y-1">
        <p className="text-gray-600 text-xs md:text-sm leading-relaxed line-clamp-2">{firstLine}</p>
        <p className="text-gray-600 text-xs md:text-sm leading-relaxed line-clamp-2">{secondLine}</p>
      </div>
    </div>
  );
};

const EventDetail = ({ label, icon: Icon }) => (
  <div className="flex items-center gap-2">
    <Icon className="w-4 h-4 text-gray-500" />
    <span className="text-gray-500 text-sm">{label}</span>
  </div>
);

const Hero = () => {
  const navigate = useNavigate(); 
  const donationOptions = [
    {
      title: 'Financial Donation',
      description: 'Funds events & Supports volunteers',
      icon: Coins
    },
    {
      title: 'Venue Support',
      description: 'Spaces for 50-100 attendees & 3-4 hours per event',
      icon: House
    },
    {
      title: 'Prize Support',
      description: 'Winner rewards & Participation gifts',
      icon: Gift
    },
    {
      title: 'Game Library',
      description: 'Board games for all levels & Party games for groups',
      icon: Gamepad2
    }
  ];

  const getNextSaturday = () => {
    const today = new Date();
    const day = today.getDay(); // 0 是周日，6 是周六
    const daysUntilSaturday = (6 - day + 7) % 7;
    const nextSaturday = new Date(today);
    nextSaturday.setDate(today.getDate() + daysUntilSaturday);
    return nextSaturday.toLocaleDateString('en-US', { 
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  const eventDetails = [
    { label: getNextSaturday(), icon: Calendar },
    { label: 'San Jose', icon: MapPin },
    { label: '80 Expected', icon: Users }
  ];

  return (
    <section className="relative bg-[#FAF6F0] px-4 py-12 md:py-20">
      <div className="max-w-screen-lg mx-auto">
        <div className="flex flex-col lg:flex-row gap-8 lg:gap-12">
          {/* Content Container */}
          <div className="space-y-6 lg:w-1/2">
            {/* Event Details */}
            <div className="flex flex-wrap gap-4">
              {eventDetails.map((detail, index) => (
                <EventDetail key={index} label={detail.label} icon={detail.icon} />
              ))}
            </div>

            {/* Hero Text */}
            <div className="space-y-4">
              <h1 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium font-serif leading-tight">
                Donate for future events
              </h1>
              <p className="text-xl text-[#2C2C2C]/70 leading-relaxed">
                Every gift creates a moment of connection and belonging for someone new. 
                Act now to help us welcome even more participants.
              </p>
            </div>
            
            {/* Donation Options Grid */}
            <div className="grid grid-cols-2 gap-3 md:gap-4">
              {donationOptions.map((option, index) => (
                <DonationCard
                  key={index}
                  title={option.title}
                  description={option.description}
                  icon={option.icon}
                />
              ))}
            </div>
          </div>

          {/* Image Container */}
          <div className="lg:w-1/2">
            <div className="w-full h-full relative rounded-xl overflow-hidden">
              <img 
                src={process.env.PUBLIC_URL + "/images/picture/hero.avif"}
                alt="Game Mixer Event"
                className="w-full h-full object-cover aspect-[4/3]"
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;

================
File: components/sections/Home/ImpactMetrics/index.js
================
import React from 'react';

const MetricCard = ({ number, label }) => {
  return (
    <div className="relative h-[115.2px] md:h-64 lg:h-[460.8px]">
      {/* Background Layer */}
      <div className="absolute inset-0 bg-[#FFD200]/10 backdrop-blur-lg rounded-xl" />
      
      {/* Content Layer */}
      <div className="relative h-full flex flex-col items-center justify-center lg:justify-end text-[#2C2C2C] p-8">
        <div className="text-5xl md:text-6xl lg:text-7xl font-bold mb-3 font-serif">{number}</div>
        <div className="text-xl md:text-2xl lg:text-2xl text-center">{label}</div>
      </div>
    </div>
  );
};

const ImpactMetrics = () => {
  const metrics = [
    { 
      number: '600', 
      label: 'EVENTS',
    },
    { 
      number: '40k', 
      label: 'ATTENDANCES',
    },
    { 
      number: '8k', 
      label: 'MEMBERS', 
    },
    { 
      number: '18k', 
      label: 'VOLUNTEER HOURS',
    }
  ];

  return (
    <section id="impact-metrics" className="max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      <h2 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium text-center mb-12 font-serif">
        What difference does it make?
      </h2>

      {/* Metrics Grid - Preserving exact same layout */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {metrics.map((metric, index) => (
          <MetricCard
            key={index}
            number={metric.number}
            label={metric.label}
          />
        ))}
      </div>

      {/* Testimonial */}
      <div className="mt-12 text-center">
        <p className="text-xl text-[#2C2C2C]/80 italic font-serif">
          "Game Mixer isn't just a gaming group—it's a family. I've met lifelong friends here."
        </p>
        <p className="text-[#2C2C2C]/60 mt-2">
          – A Regular Participant
        </p>
      </div>
    </section>
  );
};

export default ImpactMetrics;

================
File: components/sections/Home/IndustryBreakdown/index.js
================
import React, { useState, useEffect } from 'react';
import { PieChart, Pie, Cell } from 'recharts';
import { MapPin } from 'lucide-react';

const IndustryBreakdown = () => {
  const [showLabels, setShowLabels] = useState(true);
  const [screenWidth, setScreenWidth] = useState(window.innerWidth);
  const [isHovered, setIsHovered] = useState(false);

  const enhanceSmallSectors = (value) => {
    if (value < 1) {
      return Math.max(value * 3, 1);
    }
    return value;
  };

  useEffect(() => {
    const handleResize = () => {
      setScreenWidth(window.innerWidth);
      setShowLabels(window.innerWidth > 768);
    };

    window.addEventListener('resize', handleResize);
    handleResize();
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Data remains the same
  const rawData = [
    { name: 'Tech Giants', value: 47.07, displayValue: 47.07, position: 'left' },
    { name: 'Retail & E-commerce', value: 0.15, displayValue: 0.15, position: 'left' },
    { name: 'Tech Startups', value: 29.92, displayValue: 29.92, position: 'center' },
    { name: 'Freelance', value: 0.45, displayValue: 0.45, position: 'right' },
    { name: 'Research', value: 13.23, displayValue: 13.23, position: 'left' },
    { name: 'Finance & Consulting', value: 2.41, displayValue: 2.41, position: 'right' },
    { name: 'Gaming & Entertainment', value: 1.35, displayValue: 1.35, position: 'center' },
    { name: 'Semiconductor', value: 2.86, displayValue: 2.86, position: 'left' },
    { name: 'Biotech & Healthcare', value: 2.56, displayValue: 2.56, position: 'right' }
  ];

  const data = rawData.map(item => ({
    ...item,
    value: enhanceSmallSectors(item.value)
  }));

  const COLORS = [
    '#FFD200', '#FFE566', '#FFEA80', '#FFF0B3', '#FFD633',
    '#FFDB4D', '#FFE099', '#FFCC00', '#FFE5B3'
  ];

  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {
    if (!showLabels || isHovered) return null;
    
    const RADIAN = Math.PI / 180;
    const radius = outerRadius * (screenWidth <= 768 ? 1.3 : 1.4);
    
    const x = cx + radius * Math.cos(-midAngle * RADIAN);
    const y = cy + radius * Math.sin(-midAngle * RADIAN);
    
    const item = data[index];
    const textAnchor = x > cx ? 'start' : 'end';
    const xOffset = textAnchor === 'start' ? 
      (screenWidth <= 768 ? 5 : 10) : 
      (screenWidth <= 768 ? -5 : -10);

    return (
      <g>
        <line
          x1={cx + (outerRadius + 2) * Math.cos(-midAngle * RADIAN)}
          y1={cy + (outerRadius + 2) * Math.sin(-midAngle * RADIAN)}
          x2={x}
          y2={y}
          stroke="rgba(44, 44, 44, 0.3)"
          strokeWidth={1}
        />
        <text
          x={x + xOffset}
          y={y - 8}
          fill="#2C2C2C"
          textAnchor={textAnchor}
          className="text-xs md:text-sm font-serif"
        >
          {item.name}
        </text>
        <text
          x={x + xOffset}
          y={y + 8}
          fill="rgba(44, 44, 44, 0.7)"
          textAnchor={textAnchor}
          className="text-xs md:text-sm"
        >
          {`${rawData[index].displayValue}%`}
        </text>
      </g>
    );
  };

  const dimensions = screenWidth <= 768 ? {
    width: Math.min(screenWidth * 0.5, 300),
    height: Math.min(screenWidth * 0.5, 300),
    innerRadius: Math.min(screenWidth * 0.1, 60),
    outerRadius: Math.min(screenWidth * 0.15, 90)
  } : {
    width: 800,
    height: 500,
    innerRadius: 100,
    outerRadius: 150
  };

  return (
    <section id="industry-breakdown" className="bg-[#FAF6F0] max-w-screen-2xl mx-auto px-4 sm:px-6 py-4 sm:py-6">
      {/* Title Section */}
      <div className="text-center mb-8">
        <h2 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium font-serif mb-2">
          INDUSTRY BREAKDOWN
        </h2>
        <h3 className="text-2xl md:text-3xl text-[#2C2C2C]/70 font-light">
          A Decade of Game Mixer Community
        </h3>
      </div>

      {/* Chart Container with Fixed Height */}
      <div 
        className="relative"
        style={{ height: `${dimensions.height}px` }}
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
      >
        {/* Background Image Layer */}
        <div className="absolute left-1/2 transform -translate-x-1/2 w-screen min-w-[1200px] h-full">
          <img 
            src={process.env.PUBLIC_URL + "/images/picture/map.jpg"}
            alt="Silicon Valley Map"
            className="w-full h-full object-cover object-center"
          />
          <div 
            className="absolute inset-0 bg-[#FAF6F0] transition-opacity duration-300"
            style={{ opacity: isHovered ? 0 : 0.9 }}
          />
        </div>

        {/* Pie Chart Layer */}
        <div 
          className="absolute left-1/2 z-10 transition-opacity duration-300"
          style={{ 
            opacity: isHovered ? 0 : 1,
            transform: 'translateX(-50%)'
          }}
        >
          <PieChart width={dimensions.width} height={dimensions.height}>
            <Pie
              data={data}
              cx="50%"
              cy="50%"
              innerRadius={dimensions.innerRadius}
              outerRadius={dimensions.outerRadius}
              paddingAngle={2}
              dataKey="value"
              label={renderCustomizedLabel}
              labelLine={false}
            >
              {data.map((entry, index) => (
                <Cell 
                  key={`cell-${index}`} 
                  fill={COLORS[index % COLORS.length]}
                  stroke="#FFFFFF"
                  strokeWidth={1}
                />
              ))}
            </Pie>
          </PieChart>
        </div>

        {/* Center Icon */}
        <div className="absolute z-20" style={{ 
          top: '50%',
          left: '50%',
          transform: 'translate(-50%, -50%)'
        }}>
          <div 
            className={`w-8 h-8 md:w-10 md:h-10 rounded-full transition-colors duration-300 
            ${isHovered ? 'bg-white' : 'bg-[#FFD200]/70'} 
            backdrop-blur-sm flex items-center justify-center`}
          >
            <MapPin className="w-5 h-5 md:w-6 md:h-6 text-[#2C2C2C]" />
          </div>
        </div>
      </div>

      {/* Legend Container - Separate from Chart */}
      {!showLabels && !isHovered && (
        <div className="mt-8 w-full flex justify-center">
          <div className="grid grid-cols-2 gap-x-4 gap-y-2 px-8 sm:px-12">
            {rawData.map((item, index) => (
              <div key={index} className="flex items-center space-x-2 min-w-0 py-1">
                <div 
                  className="w-1.5 h-1.5 rounded-full flex-shrink-0"
                  style={{ backgroundColor: COLORS[index] }}
                />
                <span className="text-[#2C2C2C]/70 text-[10px] sm:text-xs truncate">
                  {item.name}: {item.displayValue}%
                </span>
              </div>
            ))}
          </div>
        </div>
      )}
    </section>
  );
};

export default IndustryBreakdown;

================
File: components/sections/Home/MissionSection/index.js
================
import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { paths } from '../../../../../src/config/paths';

const MissionSection = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);

  const images = [
    { id: 1, src: paths.getImagePath('picture/mission.avif'), alt: "Community game night" },
    { id: 2, src: paths.getImagePath('picture/hero.avif'), alt: "Board game session" },
    { id: 3, src: paths.getImagePath('picture/hero.avif'), alt: "Game mixer event" },
  ];

  // Get mobile images (2nd and 3rd images)
  const mobileImages = images.slice(1, 3);

  useEffect(() => {
    if (!isAutoPlaying) return;

    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % mobileImages.length);
    }, 3000);

    return () => clearInterval(interval);
  }, [isAutoPlaying, mobileImages.length]);

  const handleNext = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prevIndex) => (prevIndex + 1) % mobileImages.length);
  };

  const handlePrev = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prevIndex) => (prevIndex - 1 + mobileImages.length) % mobileImages.length);
  };

  return (
    <section id="mission-section" className="bg-[#FAF6F0]">
      {/* Hero Image - Mobile */}
      <div className="md:hidden w-full h-[50vh] relative">
        <img
          src={images[0].src}
          alt={images[0].alt}
          className="w-full h-full object-cover"
        />
      </div>

      <div className="px-4 py-8 md:pt-0 md:pb-24">
        <div className="max-w-screen-lg mx-auto">
          {/* Hero Image - Desktop */}
          <div className="hidden md:block w-full h-[60vh] relative mb-8">
            <img
              src={images[0].src}
              alt={images[0].alt}
              className="w-full h-full object-cover"
            />
          </div>

          {/* Mission Statement */}
          <div className="text-center space-y-4 md:space-y-6 max-w-4xl mx-auto mb-8 md:mb-16">
            <p className="text-2xl md:text-4xl text-[#2C2C2C] font-medium leading-snug md:leading-relaxed">
              Game Mixer is Silicon Valley's premier nonprofit dedicated to building vibrant and connected communities through the power of play.
            </p>
          </div>

          <div className="max-w-5xl mx-auto space-y-8 md:space-y-16">
            {/* Image Carousel - Desktop */}
            <div className="hidden md:grid md:grid-cols-3 gap-6">
              {images.map((image) => (
                <div 
                  key={image.id}
                  className="bg-white rounded-xl overflow-hidden relative aspect-square shadow-sm"
                >
                  <img
                    src={image.src}
                    alt={image.alt}
                    className="absolute inset-0 w-full h-full object-cover"
                  />
                </div>
              ))}
            </div>

            {/* Image Carousel - Mobile (only showing remaining 2 images) */}
            <div className="relative md:hidden">
              <div className="overflow-hidden rounded-xl aspect-square max-w-[80%] mx-auto">
                <div 
                  className="relative flex"
                  style={{ 
                    transform: `translateX(-${currentIndex * 100}%)`, 
                    transition: 'transform 0.3s ease-in-out' 
                  }}
                >
                  {mobileImages.map((image) => (
                    <div
                      key={image.id}
                      className="min-w-full relative"
                    >
                      <img
                        src={image.src}
                        alt={image.alt}
                        className="w-full h-full object-cover rounded-xl"
                      />
                    </div>
                  ))}
                </div>
              </div>

              {/* Navigation Buttons */}
              <button
                onClick={handlePrev}
                className="absolute left-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white rounded-full flex items-center justify-center hover:bg-gray-50 transition-colors"
              >
                <ChevronLeft className="w-6 h-6 text-[#2C2C2C]" />
              </button>
              <button
                onClick={handleNext}
                className="absolute right-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white rounded-full flex items-center justify-center hover:bg-gray-50 transition-colors"
              >
                <ChevronRight className="w-6 h-6 text-[#2C2C2C]" />
              </button>

              {/* Dots Indicator */}
              <div className="absolute -bottom-8 left-1/2 -translate-x-1/2 flex space-x-2">
                {mobileImages.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => {
                      setCurrentIndex(index);
                      setIsAutoPlaying(false);
                    }}
                    className={`w-2 h-2 rounded-full transition-colors duration-200 ${
                      index === currentIndex ? 'bg-[#2C2C2C]' : 'bg-gray-300'
                    }`}
                  />
                ))}
              </div>
            </div>

            {/* Vision Statement */}
            <div className="text-center space-y-6">
              <h3 className="text-2xl md:text-3xl text-[#2C2C2C] font-medium">
                Together, we end loneliness
              </h3>
              <p className="text-lg text-gray-600 leading-relaxed max-w-4xl mx-auto">
                Since 2013, we've hosted over 600 events, engaged 40,000+ participants, and built a community that celebrates diversity, inclusivity, and joy. We create spaces where play brings people together—breaking barriers, fostering friendships, and creating a sense of belonging in Silicon Valley's fast-paced world. Our vision is to build a world where everyone has a community to call their own, built through the joy of shared experiences.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default MissionSection;

================
File: components/sections/Home/SponsorsSection/index.js
================
import React from 'react';

const SponsorsSection = () => {
  const basePath = `${process.env.PUBLIC_URL}/images/sponsor-logo/`;

  const sponsors = [
    {
      logo: `${basePath}BOA.avif`,
      link: 'https://www.bankofamerica.com/',
    },
    {
      logo: `${basePath}Starbucks-Logo.avif`,
      link: 'https://www.starbucks.com/',
    },
    {
      logo: `${basePath}Texas Roadhouse_edited.avif`,
      link: 'https://www.texasroadhouse.com/locations/80-union-cityca',
    },
    {
      logo: `${basePath}Stonemaier_edited.avif`,
      link: 'https://stonemaiergames.com/',
    },
    {
      logo: `${basePath}flyhigh.avif`,
      link: 'https://flyhightalent.com/',
    },
    {
      logo: `${basePath}safeway logo square.avif`,
      link: 'https://www.safeway.com/',
    },
    {
      logo: `${basePath}Game Toppers.avif`,
      link: 'https://www.gametoppersllc.com/',
    },
    {
      logo: `${basePath}Sunrise Tornado.avif`,
      link: 'https://www.sunrisetornado.com/',
    },
  ];

  const handleGiveToday = () => {
    const donationSection = document.getElementById('donation-options');
    if (donationSection) {
      donationSection.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  };

  return (
    <section id="sponsors" className="bg-[#FAF6F0] max-w-screen-lg mx-auto px-4 py-12 md:py-20">
      <div className="text-center space-y-4 mb-12">
        <h2 className="text-3xl md:text-4xl text-[#2C2C2C] font-medium font-serif">
          Thank You to Our Amazing Sponsors
        </h2>
        <p className="text-xl text-[#2C2C2C]/70">
          We are proud to have the support of leading organizations and community
          partners who believe in building bridges through play.
        </p>
      </div>

      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-1 gap-y-6 max-w-4xl mx-auto">
        {sponsors.map((sponsor, index) => (
          <div
            key={index}
            className="flex items-center justify-center relative mx-auto bg-white rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 w-20 h-20 overflow-hidden"
          >
            <a
              href={sponsor.link}
              target="_blank"
              rel="noopener noreferrer"
              className="w-full h-full flex items-center justify-center"
            >
              <img
                src={sponsor.logo}
                alt={`Sponsor ${index + 1}`}
                className="max-w-[70%] max-h-[70%] object-contain"
              />
            </a>
          </div>
        ))}
      </div>

      <div className="text-center space-y-6 mt-12">
        <p className="text-xl text-[#2C2C2C]/70">
          Join these game-changers in building a more connected Silicon Valley.
        </p>
        <button 
          onClick={handleGiveToday}
          className="
            px-8 
            py-3 
            rounded-xl
            text-lg
            font-bold
            tracking-wider
            bg-[#FFD200]
            text-[#2C2C2C]
            shadow-sm
            transition-all 
            duration-300
            transform
            hover:bg-[#FFE566]
            hover:shadow-md
            hover:scale-105
            active:scale-95
          "
        >
          GIVE TODAY
        </button>
      </div>
    </section>
  );
};

export default SponsorsSection;

================
File: components/sections/Home/TestimonialsSection/index.js
================
import React, { useState } from 'react';
import { ChevronLeft, ChevronRight, Linkedin } from 'lucide-react';

const TestimonialsSection = () => {
  const [currentPage, setCurrentPage] = useState(0);
  const [touchStart, setTouchStart] = useState(null);
  const [touchEnd, setTouchEnd] = useState(null);

  const testimonials = [
    {
      name: "STELLA LU",
      title: "Former Board Member of the Chief's Advisory Committee, Co-founder of Game Mixer",
      quote: "Ten years ago, I discovered the magic of board gaming at Rony's local meetups. When the organizing group dissolved, Rony and I decided to keep the games alive. Our simple effort to restart the gatherings drew unexpected support. People eagerly offered venues and resources. We reignited these weekly game nights, and I uncovered my unexpected talent for bringing people together.\n\nOur weekly events in Santa Clara grew beyond expectations, from thirty to eighty regular attendees. I found pure joy in hosting these gatherings, grateful for the amazing team and resources that made it possible. Through countless weekends, I watched strangers become friends over shared stories and card games. The most rewarding part? Seeing brilliant minds from tech and healthcare connect, creating lasting bonds in our immigrant community. These experiences inspired my transition from finance to government work.\n\nEach event now brings our perfect mix: 30% eager newcomers alongside familiar faces. Here in this space, we've created something I once desperately searched for: a true sense of home.",
      linkedinUrl: "https://www.linkedin.com/in/stellaxlu/",
      showLinkedIn: true
    },
    {
      name: "EDISON",
      title: "Regular Member",
      quote: "There's something remarkable about Game Mixer players. I've always felt this instant connection and trust with them. We're all drawn here by Game Mixer's enduring commitment to giving back to the community. The chemistry is just magical! Through Game Mixer, I've built wonderful friendships, including one with a fellow player who now provides installation services for the hardware products I sell. We hit it off immediately, started referring trusted clients to each other, and now work together serving our shared customers. I couldn't be happier with this partnership! Thank you, Game Mixer, and thank you to all my amazing friends!",
      linkedinUrl: "https://linkedin.com/in/edison",
      showLinkedIn: true
    },
    {
      name: "A Developer at Google",
      quote: "I absolutely love board games and used to join many different gaming events. But then I suddenly realized that all those other events disappeared over time due to poor management and various issues. Game Mixer became my only weekly haven to look forward to! They always have games of different types and difficulty levels, with hosts who patiently explain everything. I can strongly feel the organizers' pure passion for games. It's been five years since I started attending Game Mixer every Saturday. Can you believe it, five years! It's like my Sunday church service, but I'm worshipping games instead!",
      showLinkedIn: false
    },
    {
      name: "HANGSONG",
      title: "Architect, Writer, Educator",
      quote: "Game Mixer has marked a decade of my life. I spent countless evenings playing board games, sharing meals, and singing. Something about this community draws kindred spirits together. Conversations flow naturally here, and everyone carries themselves with grace. I can still name several core hosts who have stayed with us, always warmhearted and ready to help explain the rules. Marriage shifted my routines, but I found myself drawn to their paid gatherings, gladly joining outdoor BBQs and special events. The organizers' dedication runs deep, and I return whenever they need help. Our love for games binds us together, and I must help keep this spirit alive.",
      showLinkedIn: false
    }
  ];

  const handlePrev = () => {
    setCurrentPage((prev) => (prev === 0 ? testimonials.length - 1 : prev - 1));
  };

  const handleNext = () => {
    setCurrentPage((prev) => (prev === testimonials.length - 1 ? 0 : prev + 1));
  };

  const onTouchStart = (e) => {
    setTouchEnd(null);
    setTouchStart(e.targetTouches[0].clientX);
  };

  const onTouchMove = (e) => {
    setTouchEnd(e.targetTouches[0].clientX);
  };

  const onTouchEnd = () => {
    if (!touchStart || !touchEnd) return;
    
    const distance = touchStart - touchEnd;
    const minSwipeDistance = 50;

    if (distance > minSwipeDistance) {
      handleNext();
    } else if (distance < -minSwipeDistance) {
      handlePrev();
    }
  };

  const currentTestimonial = testimonials[currentPage];

  return (
    <section id="testimonials" className="bg-[#FAF6F0] py-16 md:py-24">
      <div className="max-w-screen-xl mx-auto px-4">
        {/* Section Header */}
        <div className="text-center mb-16">
          <p className="text-[#6B90FF] text-base mb-4 uppercase tracking-wider">
            WHAT PEOPLE ARE SAYING
          </p>
          <h2 className="text-2xl md:text-3xl text-[#2C2C2C] font-serif mb-4">
            An experience that transforms<br />lives through play
          </h2>
          <p className="text-sm text-[#2C2C2C]/60 md:hidden">
            Swipe left or right to see more stories
          </p>
        </div>

        {/* Testimonials Container */}
        <div className="relative max-w-2xl mx-auto">
          {/* Navigation Buttons */}
          <button
            onClick={handlePrev}
            className="absolute -left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-[#2C2C2C]/10 hover:bg-[#2C2C2C]/20 text-[#2C2C2C] transition-colors z-10"
            aria-label="Previous testimonial"
          >
            <ChevronLeft className="w-6 h-6" />
          </button>

          <button
            onClick={handleNext}
            className="absolute -right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-[#2C2C2C]/10 hover:bg-[#2C2C2C]/20 text-[#2C2C2C] transition-colors z-10"
            aria-label="Next testimonial"
          >
            <ChevronRight className="w-6 h-6" />
          </button>

          {/* Testimonial Card */}
          <div 
            className="transition-all duration-500 ease-in-out transform touch-pan-x"
            onTouchStart={onTouchStart}
            onTouchMove={onTouchMove}
            onTouchEnd={onTouchEnd}
          >
            <div 
              className="bg-white rounded-2xl shadow-lg p-8 flex flex-col items-center text-center h-full"
              style={{
                transform: touchEnd && touchStart 
                  ? `translateX(${Math.min(Math.max(touchEnd - touchStart, -100), 100)}px)`
                  : undefined,
                transition: touchEnd && touchStart ? 'none' : 'transform 0.3s ease-in-out'
              }}
            >
              <div className="flex items-center gap-2 mb-2">
                <h3 className="text-lg text-[#2C2C2C] font-serif">
                  {currentTestimonial.name}
                </h3>
                {currentTestimonial.showLinkedIn && (
                  <a 
                    href={currentTestimonial.linkedinUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-[#0077B5] hover:text-[#0077B5]/80 transition-colors"
                    aria-label={`Visit ${currentTestimonial.name}'s LinkedIn profile`}
                  >
                    <Linkedin className="w-6 h-6" />
                  </a>
                )}
              </div>
              {currentTestimonial.title && (
                <p className="text-sm text-[#2C2C2C]/60 mb-6">
                  {currentTestimonial.title}
                </p>
              )}
              <p className="text-base text-[#2C2C2C]/80 leading-relaxed font-serif flex-grow whitespace-pre-line">
                {currentTestimonial.quote}
              </p>
            </div>
          </div>

          {/* Slide Indicators */}
          <div className="flex justify-center space-x-2 mt-8">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => setCurrentPage(index)}
                className={`w-2 h-2 rounded-full transition-colors ${
                  currentPage === index ? 'bg-[#2C2C2C]' : 'bg-[#2C2C2C]/40'
                }`}
                aria-label={`Go to slide ${index + 1}`}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default TestimonialsSection;

================
File: components/sections/Home/WordCloudSection/index.js
================
import React from 'react';

const WordCloudSection = () => {
  return (
    <section className="bg-[#FAF6F0] px-4 py-8">
      <div className="max-w-screen-lg mx-auto">
        {/* Text Content */}
        <div className="text-center mb-8">
          <p className="text-lg text-gray-600 leading-relaxed max-w-4xl mx-auto">
            A thriving community of young professionals with an average age of 30, bringing together diverse talents across Silicon Valley's tech ecosystem.
          </p>
        </div>

        {/* Image Container */}
        <div className="w-1/3 mx-auto">
          <div className="bg-transparent overflow-hidden relative">
            <img
              src={process.env.PUBLIC_URL + "/images/picture/wordcloud.svg"}
              alt="Word Cloud Visualization"
              className="w-full h-auto object-contain"
            />
          </div>
        </div>
      </div>
    </section>
  );
};

export default WordCloudSection;

================
File: config/paths.js
================
// src/config/paths.js
export const BASE_PATH = '/GameMixer';
export const IMAGE_PATH = `${process.env.PUBLIC_URL}/images`;

export const paths = {
  getImagePath: (path) => `${IMAGE_PATH}/${path}`,
  getRoutePath: (path) => `${BASE_PATH}${path}`
};

export default paths;

================
File: context/DonationContext.js
================
import React, { createContext, useContext, useState } from 'react';

const DonationContext = createContext(undefined);

export function DonationProvider({ children }) {
  const [selectedAmount, setSelectedAmount] = useState(null);
  const [donationType, setDonationType] = useState('financial');
  const [customAmount, setCustomAmount] = useState('');

  const setDonationAmount = (amount) => {
    setSelectedAmount(amount);
    setCustomAmount(amount ? amount.toString() : '');
  };

  const value = {
    selectedAmount,
    donationType,
    customAmount,
    setDonationAmount,
    setDonationType,
    setCustomAmount
  };

  return (
    <DonationContext.Provider value={value}>
      {children}
    </DonationContext.Provider>
  );
}

export function useDonation() {
  const context = useContext(DonationContext);
  if (context === undefined) {
    throw new Error('useDonation must be used within a DonationProvider');
  }
  return context;
}

================
File: pages/Donation/index.jsx
================
// pages/Donation/index.jsx
import React from 'react';
import DonationOptions from '../../components/sections/Home/DonationOptions';
import { DonationProvider } from '../../context/DonationContext';

const DonationPage = () => {
  return (
    <DonationProvider>
      <div className="py-12">
        <DonationOptions />
      </div>
    </DonationProvider>
  );
};

export default DonationPage;

================
File: pages/Events/PastEventDetail/index.js
================
// pages/Events/PastEventDetail/index.js
import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import PhotoModal from '../../../components/common/PhotoModal';

const PastEventDetail = () => {
  const { eventId } = useParams();
  const [modalOpen, setModalOpen] = useState(false);
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);

  // Mock data - in a real app, this would be fetched based on eventId
  const eventData = {
    title: "Game Mixer's Ultimate Summer Bash!",
    subtitle: "An evening of BBQ, board games, and community bonding",
    tags: ["Ultimate Summer Bash", "Latest"],
    author: {
      name: "Game Mixer",
      image: process.env.PUBLIC_URL + "/images/Game-mixer-logo.avif",
      link: "#"
    },
    mainImage: process.env.PUBLIC_URL + "/images/picture/barbecue/WOO_2303.JPG",
    content: `Come hungry and ready to trade (or play!), because Game Mixer's Summer BBQ is bringing together food lovers and game enthusiasts for the most exciting event of the season! Mingle with fellow gamers, trade your favorite board games, and enjoy mouth-watering BBQ in a vibrant, outdoor atmosphere. Whether you're a die-hard board game aficionado or just looking for a fantastic way to spend your Saturday, this event is packed with fun and excitement for everyone!\n\nDon't miss out on the fun, the games, and the amazing community vibes. Grab your friends and family, and join us for a day you won't forget. Let the games begin!\n\nDirection to Blackberry Farm, Cupertino, CA\n• Use this link to navigate to Blackberry Farm Parking.\n• Once you arrived at the parking lot, follow the map to join us at the picnic area!\n• You can use our interactive gallery to identify all the landmarks!`,
    photos: [
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/WOO_2303.JPG",
        alt: "BBQ event overview",
        description: "Game Mixer community gathering for summer BBQ"
      },
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/WOO_2469.JPG",
        alt: "Group playing games",
        description: "Friends enjoying board games together"
      },
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/合照Volunteer.JPG",
        alt: "Volunteer group photo",
        description: "Our amazing volunteer team"
      },
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/图5-2.JPG",
        alt: "BBQ preparation",
        description: "Getting the grill ready"
      },
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/烧烤1.JPG",
        alt: "Grilling in action",
        description: "Master griller at work"
      },
      { 
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/肉串2.JPG",
        alt: "Grilled skewers",
        description: "Delicious grilled skewers"
      },
      {
        url: process.env.PUBLIC_URL + "/images/picture/barbecue/食物.JPG",
        alt: "Food spread",
        description: "Amazing spread of BBQ dishes"
      }
    ]
  };

  const handlePhotoClick = (index) => {
    setCurrentPhotoIndex(index);
    setModalOpen(true);
  };

  const handleNextPhoto = () => {
    setCurrentPhotoIndex(prev => 
      prev < eventData.photos.length - 1 ? prev + 1 : prev
    );
  };

  const handlePreviousPhoto = () => {
    setCurrentPhotoIndex(prev => prev > 0 ? prev - 1 : prev);
  };

  return (
    <div className="max-w-4xl mx-auto px-4 py-12">
      {/* Header Section - Centered */}
      <div className="text-center mb-12">
        {/* Tags */}
        <div className="flex justify-center gap-4 mb-6">
          {eventData.tags.map(tag => (
            <span key={tag} className="bg-gray-100 px-4 py-1 rounded-full text-sm text-gray-600">
              {tag}
            </span>
          ))}
        </div>

        {/* Title and Subtitle */}
        <h1 className="text-4xl font-bold mb-4">{eventData.title}</h1>
        <p className="text-xl text-gray-600 mb-8">{eventData.subtitle}</p>

        {/* Author */}
        <div className="flex items-center justify-center gap-3">
          <p className="text-gray-600">Written by</p>
          <a href={eventData.author.link} className="flex items-center gap-2">
            <div className="bg-[#FFD200] p-1 rounded-lg">
              <img
                src={eventData.author.image}
                alt={eventData.author.name}
                className="w-8 h-8 object-contain"
              />
            </div>
            <span className="font-medium text-[#2C2C2C]">
              {eventData.author.name}
            </span>
          </a>
        </div>
      </div>

      {/* Main Image */}
      <div className="mb-12 rounded-xl overflow-hidden max-h-[300px] max-w-xl mx-auto">
        <img
          src={eventData.mainImage}
          alt={eventData.title}
          className="w-full h-full object-cover"
        />
      </div>

      {/* Content */}
      <div className="prose max-w-xl mx-auto mb-16">
        <div className="whitespace-pre-line text-lg text-gray-700 leading-relaxed">
          {eventData.content}
        </div>
      </div>

      {/* Photo Album */}
      <div className="space-y-4">
        <h2 className="text-2xl font-bold">Photo Album</h2>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
          {eventData.photos.slice(0, 6).map((photo, index) => (
            <button
              key={index}
              onClick={() => handlePhotoClick(index)}
              className="relative aspect-square rounded-lg overflow-hidden group"
            >
              <img
                src={photo.url}
                alt={photo.alt}
                className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
              />
              {index === 5 && eventData.photos.length > 6 && (
                <div className="absolute inset-0 bg-black/50 flex items-center justify-center">
                  <span className="text-white text-2xl font-bold">
                    +{eventData.photos.length - 6}
                  </span>
                </div>
              )}
            </button>
          ))}
        </div>
      </div>

      {/* Photo Modal */}
      <PhotoModal
        isOpen={modalOpen}
        onClose={() => setModalOpen(false)}
        currentPhoto={eventData.photos[currentPhotoIndex]}
        onNext={handleNextPhoto}
        onPrevious={handlePreviousPhoto}
        photos={eventData.photos}
        currentIndex={currentPhotoIndex}
      />
    </div>
  );
};

export default PastEventDetail;

================
File: pages/Events/EventDetail.js
================
import React, { useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { Calendar, Clock, MapPin } from 'lucide-react';
import PhotoModal from '../../components/common/PhotoModal';

const PhotoGallery = ({ images, onPhotoClick }) => {
  const visibleImages = images.slice(0, 6);
  const remainingCount = Math.max(0, images.length - 6);

  return (
    <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
      {visibleImages.map((image, index) => (
        <button
          key={index}
          onClick={() => onPhotoClick(index)}
          className="relative aspect-square rounded-lg overflow-hidden group"
        >
          <img
            src={image.url}
            alt={image.alt}
            className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
          />
          {index === 5 && remainingCount > 0 && (
            <div className="absolute inset-0 bg-black/50 flex items-center justify-center">
              <span className="text-white text-2xl font-bold">
                +{remainingCount}
              </span>
            </div>
          )}
        </button>
      ))}
    </div>
  );
};

const EventDetailPage = () => {
  const { eventSlug } = useParams();
  const [modalOpen, setModalOpen] = useState(false);
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);

  // Event details mapping based on slug
  const eventDetailsMap = {
    'board-game-social': {
      title: "Board Game Social",
      image: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/1B3076C5-8DC7-49E1-9612-9010F90E813E_1_102_a.jpeg",
      date: "Saturday, January 29",
      time: "3:00 PM - 6:00 PM",
      location: "San Jose",
      description: "Whether you're new to board games or a seasoned pro, our three-hour Game Mixer Board Game Social and our dinner gatherings are must-have experiences in your social calendar.\n\nAt Game Mixer, you'll discover an array of classic games that never lose their charm, alongside simple, joyful, and easy-to-learn picks recommended by our enthusiastic hosts. We also love to keep things exciting with a steady stream of new games added regularly. Join us for endless fun, great company, and the perfect blend of social and gaming excitement!\n\nNo experience required.\n\nCome and enjoy the fun, relaxing and diverse board games.",
      host: {
        name: "Game Mixer",
        image: process.env.PUBLIC_URL + "/images/Game-mixer-logo.avif"
      },
      photos: [
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/1B3076C5-8DC7-49E1-9612-9010F90E813E_1_102_a.jpeg",
          alt: "Board game session 1",
          description: "Board game social gathering"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/005.png",
          alt: "Board game session 2",
          description: "Players enjoying board games"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/6F42AF28-A052-49F9-BC2E-7AD384D50F93_1_102_a.jpeg",
          alt: "Board game session 3",
          description: "Game night fun"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/009.png",
          alt: "Board game session 4",
          description: "Community gaming event"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_0007.HEIC",
          alt: "Board game session 5",
          description: "Strategy game session"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_9594.PNG",
          alt: "Board game session 6",
          description: "Group playing games"
        },
        {
          url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_9620.PNG",
          alt: "Board game session 7",
          description: "Game night highlights"
        }
      ]
    },
    'summer-bash-2025': {
        title: "Board Game Social",
        image: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/1B3076C5-8DC7-49E1-9612-9010F90E813E_1_102_a.jpeg",
        date: "Saturday, January 29",
        time: "3:00 PM - 6:00 PM",
        location: "San Jose",
        description: "Whether you're new to board games or a seasoned pro, our three-hour Game Mixer Board Game Social and our dinner gatherings are must-have experiences in your social calendar.\n\nAt Game Mixer, you'll discover an array of classic games that never lose their charm, alongside simple, joyful, and easy-to-learn picks recommended by our enthusiastic hosts. We also love to keep things exciting with a steady stream of new games added regularly. Join us for endless fun, great company, and the perfect blend of social and gaming excitement!\n\nNo experience required.\n\nCome and enjoy the fun, relaxing and diverse board games.",
        host: {
          name: "Game Mixer",
          image: process.env.PUBLIC_URL + "/images/Game-mixer-logo.avif"
        },
        photos: [
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/1B3076C5-8DC7-49E1-9612-9010F90E813E_1_102_a.jpeg",
            alt: "Board game session 1",
            description: "Board game social gathering"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/005.png",
            alt: "Board game session 2",
            description: "Players enjoying board games"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/6F42AF28-A052-49F9-BC2E-7AD384D50F93_1_102_a.jpeg",
            alt: "Board game session 3",
            description: "Game night fun"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/009.png",
            alt: "Board game session 4",
            description: "Community gaming event"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_0007.HEIC",
            alt: "Board game session 5",
            description: "Strategy game session"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_9594.PNG",
            alt: "Board game session 6",
            description: "Group playing games"
          },
          {
            url: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/IMG_9620.PNG",
            alt: "Board game session 7",
            description: "Game night highlights"
          }
        ]
      }
  };

  const eventDetails = eventDetailsMap[eventSlug];

  if (!eventDetails) {
    return <div>Event not found</div>;
  }

  const handlePhotoClick = (index) => {
    setCurrentPhotoIndex(index);
    setModalOpen(true);
  };

  const handleNextPhoto = () => {
    setCurrentPhotoIndex(prev => 
      prev < eventDetails.photos.length - 1 ? prev + 1 : prev
    );
  };

  const handlePreviousPhoto = () => {
    setCurrentPhotoIndex(prev => prev > 0 ? prev - 1 : prev);
  };

  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      {/* Event Title */}
      <h1 className="text-4xl font-bold text-center mb-8">{eventDetails.title}</h1>

      {/* Event Image */}
      <div className="rounded-xl overflow-hidden mb-8">
        <img
          src={eventDetails.image}
          alt={eventDetails.title}
          className="w-full h-auto"
        />
      </div>

      {/* Event Details */}
      <div className="space-y-6 mb-8">
        <div className="flex items-center gap-2">
          <Calendar className="w-5 h-5 text-[#2C2C2C]" />
          <span className="text-lg">{eventDetails.date}</span>
          <Clock className="w-5 h-5 text-[#2C2C2C] ml-4" />
          <span className="text-lg">{eventDetails.time}</span>
        </div>

        <div className="flex items-center gap-2">
          <MapPin className="w-5 h-5 text-[#2C2C2C]" />
          <span className="text-lg">{eventDetails.location}</span>
        </div>

        {/* Host Information - Updated with new style */}
        <div className="flex items-center gap-3">
          <p className="text-gray-600">Hosted by</p>
          <div className="flex items-center gap-2">
            <div className="bg-[#FFD200] p-1 rounded-lg">
              <img
                src={eventDetails.host.image}
                alt={eventDetails.host.name}
                className="w-8 h-8 object-contain"
              />
            </div>
            <span className="font-medium text-[#2C2C2C]">
              {eventDetails.host.name}
            </span>
          </div>
        </div>

        {/* Terms and Conditions Link */}
        <div>
          <Link to="/terms" className="text-[#6B90FF] hover:underline">
            Terms and conditions
          </Link>
        </div>

        {/* Event Description */}
        <p className="text-lg text-[#2C2C2C]/80 leading-relaxed whitespace-pre-line">
          {eventDetails.description}
        </p>

        {/* Register Button */}
        <div className="text-center">
          <button className="bg-[#FFD200] text-[#2C2C2C] px-8 py-3 rounded-lg font-bold hover:bg-[#FFE566] transition-colors">
            Register Now
          </button>
        </div>
      </div>

      {/* Photo Album */}
      <div className="space-y-4">
        <h2 className="text-2xl font-bold">Photo Album</h2>
        <PhotoGallery 
          images={eventDetails.photos} 
          onPhotoClick={handlePhotoClick}
        />
      </div>

      {/* Photo Modal */}
      <PhotoModal
        isOpen={modalOpen}
        onClose={() => setModalOpen(false)}
        currentPhoto={eventDetails.photos[currentPhotoIndex]}
        onNext={handleNextPhoto}
        onPrevious={handlePreviousPhoto}
        photos={eventDetails.photos}
        currentIndex={currentPhotoIndex}
      />
    </div>
  );
};

export default EventDetailPage;

================
File: pages/Events/index.js
================
import React, { useState } from 'react';
import { Calendar, MapPin } from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import PromotionalCarousel from '../../components/PromotionalCarousel';

const EventsPage = () => {
  const navigate = useNavigate();
  const [activeFilter, setActiveFilter] = useState('All');

  const promotionalEvents = [
    {
      id: 1,
      title: "Board Game Social",
      location: "San Jose",
      date: "Saturday, January 29",
      image: process.env.PUBLIC_URL + "/images/picture/weeklyboardgame/1B3076C5-8DC7-49E1-9612-9010F90E813E_1_102_a.jpeg",
      slug: "board-game-social"
    },
    {
      id: 2,
      title: "Game Mixer's Ultimate Summer Bash!",
      location: "San Jose",
      date: "Tuesday, Jan 28",
      image: process.env.PUBLIC_URL + "/images/picture/Summer_Bash.jpg",
      slug: "summer-bash-2025"
    }
  ];

  const filterTabs = [
    'All', 'BoardGameSocial', 'UltimateSummerBash', 'Social, Charity, and Community'
  ];

  const pastEvents = [
    {
      id: 1,
      title: "Game Mixer's Ultimate Summer Bash!",
      location: 'San Jose',
      date: 'Sat, July 15',
      image: process.env.PUBLIC_URL + "/images/picture/barbecue/WOO_2469.JPG",
      promoted: true
    },
    {
      id: 2,
      title: <span><strong>B</strong>oard-<strong>G</strong>ame <strong>T</strong>ournament</span>,
      location: 'San Jose',
      date: 'Thu, Feb 13',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/003.JPG"
    },
    {
      id: 3,
      title: <span><strong>W</strong>inery in the <strong>S</strong>ummer</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/004.jpg"
    },
    {
      id: 4,
      title: <span><strong>H</strong>an-<strong>S</strong>tyle <strong>C</strong>lothes <strong>G</strong>ala</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/005.jpg"
    },
    {
      id: 5,
      title: <span><strong>L</strong>unar <strong>N</strong>ew <strong>Y</strong>ear <strong>F</strong>estival <strong>C</strong>upertino</span>,
      location: 'Cupertino',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/007.JPG"
    },
    {
      id: 6,
      title: <span><strong>H</strong>alloween <strong>C</strong>arnival</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/010.jpg"
    },
    {
      id: 7,
      title: <span><strong>S</strong>vief <strong>C</strong>onvention</span>,
      location: 'Santa Clara',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/Layla.JPG"
    },
    {
      id: 8,
      title: <span><strong>C</strong>upertino <strong>G</strong>ame <strong>N</strong>ight</span>,
      location: 'Cupertino',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/rc2.jpg"
    },
    {
      id: 9,
      title: <span><strong>L</strong>abor <strong>D</strong>ay <strong>B</strong>bq</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/003.JPG"
    },
    {
      id: 10,
      title: <span><strong>W</strong>inery <strong>P</strong>arty</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/004.jpg"
    },
    {
      id: 11,
      title: <span><strong>C</strong>upertino <strong>G</strong>ame <strong>N</strong>ight</span>,
      location: 'Cupertino',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/007 (1).jpg"
    },
    {
      id: 12,
      title: <span><strong>B</strong>bq in <strong>M</strong>ay</span>,
      location: 'San Jose',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/005.jpg"
    },
    {
      id: 13,
      title: <span><strong>S</strong>anta <strong>C</strong>lara <strong>C</strong>ounty 5<strong>k</strong> <strong>R</strong>un</span>,
      location: 'Santa Clara',
      date: 'Sat, Feb 1',
      image: process.env.PUBLIC_URL + "/images/picture/pastevent_main_picture/010.jpg"
    }
];

  return (
    <div className="min-h-screen bg-white">
      {/* Promotional Events Carousel */}
      <PromotionalCarousel events={promotionalEvents} />

      {/* Past Events Section */}
      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* Filter Tabs */}
        <div className="overflow-x-auto mb-8">
          <div className="flex space-x-6 min-w-max">
            {filterTabs.map((tab) => (
              <button
                key={tab}
                onClick={() => setActiveFilter(tab)}
                className={`px-4 py-2 rounded-full transition-colors ${
                  activeFilter === tab
                    ? 'bg-[#FFD200] text-black font-medium'
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                {tab}
              </button>
            ))}
          </div>
        </div>

        {/* Event Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {pastEvents.map((event) => (
            <div 
              key={event.id} 
              className="bg-white rounded-lg shadow-md overflow-hidden cursor-pointer hover:shadow-lg transition-shadow"
              onClick={() => navigate(`/events/past/${event.id}`)}
            >
              <div className="relative h-48">
                <img
                  src={event.image}
                  alt={typeof event.title === 'string' ? event.title : 'Event'}
                  className="w-full h-full object-cover"
                />
                {event.promoted && (
                  <div className="absolute top-4 left-4 bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm">
                    Just added
                  </div>
                )}
              </div>
              <div className="p-4">
                <h3 className="text-xl font-semibold mb-2">{event.title}</h3>
                <div className="space-y-2 text-gray-600">
                  <div className="flex items-center gap-2">
                    <Calendar className="w-4 h-4" />
                    <span>{event.date}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <MapPin className="w-4 h-4" />
                    <span>{event.location}</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default EventsPage;

================
File: pages/Home/index.jsx
================
import React from 'react';
import Hero from '../../components/sections/Home/Hero';
import ImpactMetrics from '../../components/sections/Home/ImpactMetrics';
import EventCarousel from '../../components/sections/Home/EventCarousel';
import MissionSection from '../../components/sections/Home/MissionSection';
import CallToAction from '../../components/sections/Home/CallToAction';
import SponsorsSection from '../../components/sections/Home/SponsorsSection';
import IndustryBreakdown from '../../components/sections/Home/IndustryBreakdown';
import TestimonialsSection from '../../components/sections/Home/TestimonialsSection';
import WordCloudSection from '../../components/sections/Home/WordCloudSection';
import ContactSection from '../../components/sections/Home/ContactSection';
import { DonationProvider } from '../../context/DonationContext';

const HomePage = () => {
  return (
    <DonationProvider>
      <div>
        <MissionSection />
        <ImpactMetrics />
        <EventCarousel />
        <IndustryBreakdown />
        <WordCloudSection/>
        <TestimonialsSection/>
        <CallToAction />
        <Hero />
        <SponsorsSection />
        <ContactSection />
      </div>
    </DonationProvider>
  );
};

export default HomePage;

================
File: styles/globals.css
================
/* Global style updates based on charity: water design */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary-yellow: #FFD200;
  --background-cream: #FAF6F0;
  --text-charcoal: #2C2C2C;
  --accent-blue: #6B90FF;
}

@layer base {
  body {
    @apply bg-[#FAF6F0] text-[#2C2C2C] overflow-x-hidden;
    font-family: 'sentinel', serif;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Sentinel A', 'Sentinel B', serif;
  }
}

@layer components {
  .container-padding {
    @apply px-4 md:px-6 lg:px-8;
  }
  
  /* Primary Button */
  .btn-primary {
    @apply bg-[#FFD200] text-[#2C2C2C] px-8 py-3 rounded-lg font-bold 
    hover:bg-[#FFE566] transition-colors duration-300;
  }

  /* Navigation */
  .nav-item {
    @apply text-[#2C2C2C] hover:text-[#6B90FF] transition-colors duration-300;
  }

  /* Card Styles */
  .content-card {
    @apply bg-white rounded-lg shadow-sm p-6;
  }

  /* Form Elements */
  .form-input {
    @apply border border-gray-200 rounded-lg px-4 py-2 w-full focus:outline-none 
    focus:ring-2 focus:ring-[#FFD200] transition-all duration-300;
  }
}

/* Custom Typography */
.display-heading {
  @apply text-4xl md:text-5xl lg:text-6xl font-bold leading-tight;
  font-family: 'Sentinel A', 'Sentinel B', serif;
}

.section-heading {
  @apply text-3xl md:text-4xl font-bold mb-6;
  font-family: 'Sentinel A', 'Sentinel B', serif;
}

/* Layout Updates */
.main-layout {
  @apply min-h-screen bg-[#FAF6F0];
}

/* Header Styles */
.header {
  @apply sticky top-0 z-50 bg-white border-b border-gray-100;
}

/* Footer Updates */
.footer {
  @apply bg-white border-t border-gray-200;
}

================
File: App.js
================
import React from 'react';
import { HashRouter as Router, Routes, Route } from 'react-router-dom';
import MainLayout from './components/layout/MainLayout';
import HomePage from './pages/Home';
import DonationPage from './pages/Donation';
import EventsPage from './pages/Events';
import EventDetailPage from './pages/Events/EventDetail';
import PastEventDetail from './pages/Events/PastEventDetail';
import './styles/globals.css';
import { paths } from './config/paths';

function App() {
  return (
    <Router basename={paths.BASE_PATH}>
      <MainLayout>
        <Routes>
          <Route path="/" element={<HomePage />} />
          <Route path="/donate" element={<DonationPage />} />
          <Route path="/give" element={<DonationPage />} />
          <Route path="/events" element={<EventsPage />} />
          <Route path="/events/:eventSlug" element={<EventDetailPage />} />
          <Route path="/events/past/:eventId" element={<PastEventDetail />} />
        </Routes>
      </MainLayout>
    </Router>
  );
}

export default App;

================
File: App.test.js
================
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

================
File: index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import reportWebVitals from './reportWebVitals';
import './styles/globals.css';  // 更改为新的样式文件路径

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

reportWebVitals();

================
File: reportWebVitals.js
================
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================
File: setupTests.js
================
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';
